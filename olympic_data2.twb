<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Year Selector' datatype='integer' default-format='*' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1920'>
        <calculation class='tableau' formula='1920' />
        <range max='2012' min='1896' />
      </column>
      <column caption='Select list' datatype='string' name='[Sport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sports&quot;'>
        <calculation class='tableau' formula='&quot;Sports&quot;' />
        <members />
      </column>
      <column caption='Rank' datatype='integer' default-format='*' name='[Year Selectors Parameter]' param-domain-type='range' role='measure' type='quantitative' value='1908'>
        <calculation class='tableau' formula='1908' />
        <range max='2012' min='1896' />
      </column>
    </datasource>
    <datasource caption='summer+' inline='true' name='federated.12rqoja0h25u19146aft21y02571' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='summer' name='textscan.0x91dmc0p1x7c41bdvk6k0clmprm'>
            <connection class='textscan' directory='D:/classes/data visulation/olympic(1896-2014)' filename='summer.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0x91dmc0p1x7c41bdvk6k0clmprm' name='dictionary.csv' table='[dictionary#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='real' name='GDP per Capita' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0x91dmc0p1x7c41bdvk6k0clmprm' name='summer.csv' table='[summer#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='Sport' ordinal='2' />
              <column datatype='string' name='Discipline' ordinal='3' />
              <column datatype='string' name='Athlete' ordinal='4' />
              <column datatype='string' name='Country' ordinal='5' />
              <column datatype='string' name='Gender' ordinal='6' />
              <column datatype='string' name='Event' ordinal='7' />
              <column datatype='string' name='Medal' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.0x91dmc0p1x7c41bdvk6k0clmprm' name='dictionary.csv' table='[dictionary#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Population' ordinal='2' />
              <column datatype='real' name='GDP per Capita' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0x91dmc0p1x7c41bdvk6k0clmprm' name='winter.csv' table='[winter#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='Sport' ordinal='2' />
              <column datatype='string' name='Discipline' ordinal='3' />
              <column datatype='string' name='Athlete' ordinal='4' />
              <column datatype='string' name='Country' ordinal='5' />
              <column datatype='string' name='Gender' ordinal='6' />
              <column datatype='string' name='Event' ordinal='7' />
              <column datatype='string' name='Medal' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Athlete (winter.csv)]' value='[winter.csv].[Athlete]' />
          <map key='[Athlete]' value='[summer.csv].[Athlete]' />
          <map key='[City (winter.csv)]' value='[winter.csv].[City]' />
          <map key='[City]' value='[summer.csv].[City]' />
          <map key='[Code]' value='[dictionary.csv].[Code]' />
          <map key='[Country (dictionary.csv)]' value='[dictionary.csv].[Country]' />
          <map key='[Country (winter.csv)]' value='[winter.csv].[Country]' />
          <map key='[Country]' value='[summer.csv].[Country]' />
          <map key='[Discipline (winter.csv)]' value='[winter.csv].[Discipline]' />
          <map key='[Discipline]' value='[summer.csv].[Discipline]' />
          <map key='[Event (winter.csv)]' value='[winter.csv].[Event]' />
          <map key='[Event]' value='[summer.csv].[Event]' />
          <map key='[GDP per Capita]' value='[dictionary.csv].[GDP per Capita]' />
          <map key='[Gender (winter.csv)]' value='[winter.csv].[Gender]' />
          <map key='[Gender]' value='[summer.csv].[Gender]' />
          <map key='[Medal (winter.csv)]' value='[winter.csv].[Medal]' />
          <map key='[Medal]' value='[summer.csv].[Medal]' />
          <map key='[Population]' value='[dictionary.csv].[Population]' />
          <map key='[Sport (winter.csv)]' value='[winter.csv].[Sport]' />
          <map key='[Sport]' value='[summer.csv].[Sport]' />
          <map key='[Year (winter.csv)]' value='[winter.csv].[Year]' />
          <map key='[Year]' value='[summer.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[dictionary.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discipline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Discipline]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Discipline</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Athlete</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Athlete]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Athlete</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (dictionary.csv)]</local-name>
            <parent-name>[dictionary.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dictionary.csv_349FEB0C51A7467EB100A0F307B537D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[dictionary.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dictionary.csv_349FEB0C51A7467EB100A0F307B537D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[dictionary.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dictionary.csv_349FEB0C51A7467EB100A0F307B537D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per Capita]</local-name>
            <parent-name>[dictionary.csv]</parent-name>
            <remote-alias>GDP per Capita</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dictionary.csv_349FEB0C51A7467EB100A0F307B537D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_505B86A9185F4724B8C8C9ABF78379D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_505B86A9185F4724B8C8C9ABF78379D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_505B86A9185F4724B8C8C9ABF78379D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discipline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Discipline (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Discipline</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_505B86A9185F4724B8C8C9ABF78379D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Athlete</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Athlete (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Athlete</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_505B86A9185F4724B8C8C9ABF78379D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_505B86A9185F4724B8C8C9ABF78379D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_505B86A9185F4724B8C8C9ABF78379D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_505B86A9185F4724B8C8C9ABF78379D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_505B86A9185F4724B8C8C9ABF78379D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Selectors' datatype='integer' name='[Calculation_812055318131421185]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Year]' />
      </column>
      <column caption='Medal Rank' datatype='integer' name='[Calculation_812055318137344003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM(IIF([Medal] = &apos;Gold&apos; OR [Medal] = &apos;Silver&apos; OR [Medal] = &apos;Bronze&apos;, 1, 0)), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total Medals' datatype='integer' name='[Calculation_812055318141988868]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(&#13;&#10;  SUM(&#13;&#10;    IF [Medal] = &apos;Gold&apos; THEN 1 ELSE 0 END +&#13;&#10;    IF [Medal] = &apos;Silver&apos; THEN 1 ELSE 0 END +&#13;&#10;    IF [Medal] = &apos;Bronze&apos; THEN 1 ELSE 0 END +&#13;&#10;    IF [Medal (winter.csv)] = &apos;Gold&apos; THEN 1 ELSE 0 END +&#13;&#10;    IF [Medal (winter.csv)] = &apos;Silver&apos; THEN 1 ELSE 0 END +&#13;&#10;    IF [Medal (winter.csv)] = &apos;Bronze&apos; THEN 1 ELSE 0 END&#13;&#10;  ), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Discipline Hierarchy' datatype='string' name='[Calculation_812055318145372165]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Sport] + &quot; - &quot; + [Discipline]' />
      </column>
      <column datatype='string' name='[City (winter.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country (dictionary.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (winter.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Discipline (winter.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Discipline]' role='dimension' type='nominal' />
      <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year (winter.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='dictionary.csv' datatype='table' name='[__tableau_internal_object_id__].[dictionary.csv_349FEB0C51A7467EB100A0F307B537D0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='summer.csv' datatype='table' name='[__tableau_internal_object_id__].[summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='winter.csv' datatype='table' name='[__tableau_internal_object_id__].[winter.csv_505B86A9185F4724B8C8C9ABF78379D7]' role='measure' type='quantitative' />
      <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Discipline (winter.csv)]' derivation='CountD' name='[ctd:Discipline (winter.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Discipline]' derivation='CountD' name='[ctd:Discipline:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Medal]' derivation='CountD' name='[ctd:Medal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Medal]' derivation='Max' name='[max:Medal:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discipline]' derivation='None' name='[none:Discipline:nk]' pivot='key' type='nominal' />
      <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_812055318141988868]' derivation='User' name='[usr:Calculation_812055318141988868:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Discipline Hierarchy)' hidden='true' name='[Action (Discipline Hierarchy)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_812055318145372165]' />
        </groupfilter>
      </group>
      <group caption='Action (Discipline)' hidden='true' name='[Action (Discipline)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Discipline]' />
        </groupfilter>
      </group>
      <group caption='Action (Medal)' hidden='true' name='[Action (Medal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Medal]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.882175' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.117825' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.12rqoja0h25u19146aft21y02571].[usr:Calculation_812055318141988868:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.12rqoja0h25u19146aft21y02571].[ctd:Discipline (winter.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12rqoja0h25u19146aft21y02571].[ctd:Discipline:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.12rqoja0h25u19146aft21y02571]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12rqoja0h25u19146aft21y02571].[ctd:Medal:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Medal:nk]' type='palette'>
            <map to='#9c755f'>
              <bucket>&quot;Bronze&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Discipline:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Wrestling Gre-R&quot;</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>&quot;Wrestling Freestyle&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;Wrestling Free.&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;Weightlifting&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;Water polo&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;Water Polo&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;Water Motorspor&quot;</bucket>
            </map>
            <map to='#c21a3b'>
              <bucket>&quot;Volleyball&quot;</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>&quot;Vaulting&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;Tug of War&quot;</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>&quot;Triathlon&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;Trampoline&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;Tennis&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;Taekwondo&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Table Tennis&quot;</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>&quot;Synchronized Swimming&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;Synchronized S.&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Swimming&quot;</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>&quot;Softball&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Shooting&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Sailing&quot;</bucket>
            </map>
            <map to='#e23b42'>
              <bucket>&quot;Rugby&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Rowing&quot;</bucket>
            </map>
            <map to='#e54144'>
              <bucket>&quot;Roque&quot;</bucket>
            </map>
            <map to='#e74445'>
              <bucket>&quot;Rhythmic G.&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;Rackets&quot;</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>&quot;Polo&quot;</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>&quot;Mountain Bike&quot;</bucket>
            </map>
            <map to='#ec5149'>
              <bucket>&quot;Modern Pentathlon&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Modern Pentath.&quot;</bucket>
            </map>
            <map to='#ee584c'>
              <bucket>&quot;Marathon swimming&quot;</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>&quot;Lacrosse&quot;</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>&quot;Jumping&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Judo&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;Jeu de Paume&quot;</bucket>
            </map>
            <map to='#f36755'>
              <bucket>&quot;Ice Hockey&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;Hockey&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Handball&quot;</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>&quot;Gymnastics Rhythmic&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;Gymnastics Artistic&quot;</bucket>
            </map>
            <map to='#f67661'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#f67964'>
              <bucket>&quot;Football&quot;</bucket>
            </map>
            <map to='#f77c66'>
              <bucket>&quot;Figure skating&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;Fencing&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Eventing&quot;</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>&quot;Dressage&quot;</bucket>
            </map>
            <map to='#f98870'>
              <bucket>&quot;Diving&quot;</bucket>
            </map>
            <map to='#fa8b73'>
              <bucket>&quot;Cycling Track&quot;</bucket>
            </map>
            <map to='#fa8d77'>
              <bucket>&quot;Cycling Road&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Cycling BMX&quot;</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>&quot;Croquet&quot;</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>&quot;Cricket&quot;</bucket>
            </map>
            <map to='#fb9884'>
              <bucket>&quot;Canoe Sprint&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Canoe Slalom&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;Canoe / Kayak S&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;Canoe / Kayak F&quot;</bucket>
            </map>
            <map to='#fca391'>
              <bucket>&quot;Boxing&quot;</bucket>
            </map>
            <map to='#fda595'>
              <bucket>&quot;BMX&quot;</bucket>
            </map>
            <map to='#fda898'>
              <bucket>&quot;Beach Volleyball&quot;</bucket>
            </map>
            <map to='#fdaa9b'>
              <bucket>&quot;Beach volley.&quot;</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>&quot;Basque Pelota&quot;</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>&quot;Basketball&quot;</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>&quot;Baseball&quot;</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>&quot;Badminton&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;Athletics&quot;</bucket>
            </map>
            <map to='#febbae'>
              <bucket>&quot;Artistic G.&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Archery&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CRC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GRE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ISV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RSA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BUL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;INA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;YUG&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;GER&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CRO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GDR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RU1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TOG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AHO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PUR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TCH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ZAM&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;URS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BWI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PHI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BOH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KSA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NED&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ALG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FRG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MGL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TGA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ZIM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NGR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BAH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GRN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NIG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SIN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BOT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HAI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KUW&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SRI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LIB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PAR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SUI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;URU&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MRI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TPE&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ANZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ZZX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EUA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IOP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GUA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SLO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BAR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SCG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EUN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IRI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MAS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;POR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VIE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Medal:nk]' type='palette'>
            <map to='#9c755f'>
              <bucket>&quot;Bronze&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Sport' />
        <field-sort-custom-order field='Discipline' />
        <field-sort-custom-order field='Athlete' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Gender' />
        <field-sort-custom-order field='Event' />
        <field-sort-custom-order field='Medal' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='dictionary.csv' id='dictionary.csv_349FEB0C51A7467EB100A0F307B537D0'>
            <properties context=''>
              <relation connection='textscan.0x91dmc0p1x7c41bdvk6k0clmprm' name='dictionary.csv' table='[dictionary#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' name='Population' ordinal='2' />
                  <column datatype='real' name='GDP per Capita' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='summer.csv' id='summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F'>
            <properties context=''>
              <relation connection='textscan.0x91dmc0p1x7c41bdvk6k0clmprm' name='summer.csv' table='[summer#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='Sport' ordinal='2' />
                  <column datatype='string' name='Discipline' ordinal='3' />
                  <column datatype='string' name='Athlete' ordinal='4' />
                  <column datatype='string' name='Country' ordinal='5' />
                  <column datatype='string' name='Gender' ordinal='6' />
                  <column datatype='string' name='Event' ordinal='7' />
                  <column datatype='string' name='Medal' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='winter.csv' id='winter.csv_505B86A9185F4724B8C8C9ABF78379D7'>
            <properties context=''>
              <relation connection='textscan.0x91dmc0p1x7c41bdvk6k0clmprm' name='winter.csv' table='[winter#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='Sport' ordinal='2' />
                  <column datatype='string' name='Discipline' ordinal='3' />
                  <column datatype='string' name='Athlete' ordinal='4' />
                  <column datatype='string' name='Country' ordinal='5' />
                  <column datatype='string' name='Gender' ordinal='6' />
                  <column datatype='string' name='Event' ordinal='7' />
                  <column datatype='string' name='Medal' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (dictionary.csv)]' />
            </expression>
            <first-end-point object-id='summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F' />
            <second-end-point object-id='dictionary.csv_349FEB0C51A7467EB100A0F307B537D0' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (winter.csv)]' />
            </expression>
            <first-end-point object-id='summer.csv_15D8CC09A5FC49F5BD21DA5FD79C1A4F' />
            <second-end-point object-id='winter.csv_505B86A9185F4724B8C8C9ABF78379D7' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='dictionary.csv+ (Multiple Connections)' inline='true' name='federated.0mycv5v1q7pjb612bh65g1r6kz7a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='dictionary' name='textscan.1hkk1oi03m25on16d0l3p16xqvku'>
            <connection class='textscan' directory='D:/classes/data visulation/olympic(1896-2014)' filename='dictionary.csv' password='' server='' />
          </named-connection>
          <named-connection caption='summer' name='textscan.0gi8r050fodhkh15c3qtd0s3yfhe'>
            <connection class='textscan' directory='D:/classes/data visulation/olympic(1896-2014)' filename='summer.csv' password='' server='' />
          </named-connection>
          <named-connection caption='winter' name='textscan.19oyr9u06n8cq312lkfaa0dwpmav'>
            <connection class='textscan' directory='D:/classes/data visulation/olympic(1896-2014)' filename='winter.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1hkk1oi03m25on16d0l3p16xqvku' name='dictionary.csv' table='[dictionary#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='real' name='GDP per Capita' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1hkk1oi03m25on16d0l3p16xqvku' name='dictionary.csv' table='[dictionary#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Population' ordinal='2' />
              <column datatype='real' name='GDP per Capita' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0gi8r050fodhkh15c3qtd0s3yfhe' name='summer.csv' table='[summer#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='Sport' ordinal='2' />
              <column datatype='string' name='Discipline' ordinal='3' />
              <column datatype='string' name='Athlete' ordinal='4' />
              <column datatype='string' name='Country' ordinal='5' />
              <column datatype='string' name='Gender' ordinal='6' />
              <column datatype='string' name='Event' ordinal='7' />
              <column datatype='string' name='Medal' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.0gi8r050fodhkh15c3qtd0s3yfhe' name='winter.csv' table='[winter#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='Sport' ordinal='2' />
              <column datatype='string' name='Discipline' ordinal='3' />
              <column datatype='string' name='Athlete' ordinal='4' />
              <column datatype='string' name='Country' ordinal='5' />
              <column datatype='string' name='Gender' ordinal='6' />
              <column datatype='string' name='Event' ordinal='7' />
              <column datatype='string' name='Medal' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Athlete (winter.csv)]' value='[winter.csv].[Athlete]' />
          <map key='[Athlete]' value='[summer.csv].[Athlete]' />
          <map key='[City (winter.csv)]' value='[winter.csv].[City]' />
          <map key='[City]' value='[summer.csv].[City]' />
          <map key='[Code]' value='[dictionary.csv].[Code]' />
          <map key='[Country (summer.csv)]' value='[summer.csv].[Country]' />
          <map key='[Country (winter.csv)]' value='[winter.csv].[Country]' />
          <map key='[Country]' value='[dictionary.csv].[Country]' />
          <map key='[Discipline (winter.csv)]' value='[winter.csv].[Discipline]' />
          <map key='[Discipline]' value='[summer.csv].[Discipline]' />
          <map key='[Event (winter.csv)]' value='[winter.csv].[Event]' />
          <map key='[Event]' value='[summer.csv].[Event]' />
          <map key='[GDP per Capita]' value='[dictionary.csv].[GDP per Capita]' />
          <map key='[Gender (winter.csv)]' value='[winter.csv].[Gender]' />
          <map key='[Gender]' value='[summer.csv].[Gender]' />
          <map key='[Medal (winter.csv)]' value='[winter.csv].[Medal]' />
          <map key='[Medal]' value='[summer.csv].[Medal]' />
          <map key='[Population]' value='[dictionary.csv].[Population]' />
          <map key='[Sport (winter.csv)]' value='[winter.csv].[Sport]' />
          <map key='[Sport]' value='[summer.csv].[Sport]' />
          <map key='[Year (winter.csv)]' value='[winter.csv].[Year]' />
          <map key='[Year]' value='[summer.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[dictionary.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[dictionary.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dictionary.csv_43FF270C0387407A80F6E35EBB257455]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[dictionary.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dictionary.csv_43FF270C0387407A80F6E35EBB257455]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[dictionary.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dictionary.csv_43FF270C0387407A80F6E35EBB257455]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per Capita]</local-name>
            <parent-name>[dictionary.csv]</parent-name>
            <remote-alias>GDP per Capita</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dictionary.csv_43FF270C0387407A80F6E35EBB257455]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_84E7128C415D484B9582BBE794D9B4F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_84E7128C415D484B9582BBE794D9B4F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_84E7128C415D484B9582BBE794D9B4F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discipline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Discipline]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Discipline</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_84E7128C415D484B9582BBE794D9B4F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Athlete</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Athlete]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Athlete</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_84E7128C415D484B9582BBE794D9B4F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (summer.csv)]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_84E7128C415D484B9582BBE794D9B4F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_84E7128C415D484B9582BBE794D9B4F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_84E7128C415D484B9582BBE794D9B4F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[summer.csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[summer.csv_84E7128C415D484B9582BBE794D9B4F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_EBE283BE5D374F88B0A291617956B2F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_EBE283BE5D374F88B0A291617956B2F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_EBE283BE5D374F88B0A291617956B2F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discipline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Discipline (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Discipline</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_EBE283BE5D374F88B0A291617956B2F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Athlete</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Athlete (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Athlete</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_EBE283BE5D374F88B0A291617956B2F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_EBE283BE5D374F88B0A291617956B2F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_EBE283BE5D374F88B0A291617956B2F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_EBE283BE5D374F88B0A291617956B2F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal (winter.csv)]</local-name>
            <parent-name>[winter.csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[winter.csv_EBE283BE5D374F88B0A291617956B2F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='calc' datatype='string' name='[Calculation_1000643552994099200]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Parameters].[Sport Parameter] = &apos;Sports&apos; then [Sport]&#13;&#10;ELSEIF [Parameters].[Sport Parameter] =&apos;Country&apos; then [Country (summer.csv)]&#13;&#10;END' />
      </column>
      <column caption='Image' datatype='string' name='[Calculation_1000643553000681475]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;&apos;' />
      </column>
      <column caption='dn' datatype='integer' name='[Calculation_668784555728699393]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <column caption='Medal Gold' datatype='integer' name='[Calculation_722827750549749761]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Medal]=&quot;gold&quot;,1,NULL)' />
      </column>
      <column caption='Medal Silver' datatype='integer' name='[Calculation_722827750549925890]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Medal]=&quot;silver&quot;,1,NULL)' />
      </column>
      <column caption='Medal Bronze' datatype='integer' name='[Calculation_722827750550073347]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Medal]=&quot;bronze&quot;,1,NULL)' />
      </column>
      <column caption='Value' datatype='integer' name='[Calculation_722827750550839300]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Medal]=&quot;gold&quot;,100,IIF([Medal]=&quot;silver&quot;,10,1))' />
      </column>
      <column caption='Rank' datatype='real' name='[Calculation_722827750550974469]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(RANK_UNIQUE(SUM([Calculation_722827750550839300])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Number of records' datatype='integer' name='[Calculation_722827750551846918]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Label Silver' datatype='string' name='[Calculation_722827750606016523]' role='measure' type='nominal'>
        <calculation class='tableau' formula='LEFT(&quot;❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚&quot;,SUM([Calculation_722827750549925890]))' />
      </column>
      <column datatype='string' name='[City (winter.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country (summer.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (winter.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year (winter.csv)]' role='dimension' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='dictionary.csv' datatype='table' name='[__tableau_internal_object_id__].[dictionary.csv_43FF270C0387407A80F6E35EBB257455]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='summer.csv' datatype='table' name='[__tableau_internal_object_id__].[summer.csv_84E7128C415D484B9582BBE794D9B4F8]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='winter.csv' datatype='table' name='[__tableau_internal_object_id__].[winter.csv_EBE283BE5D374F88B0A291617956B2F8]' role='measure' type='quantitative' />
      <column-instance column='[Country (summer.csv)]' derivation='None' name='[none:Country (summer.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_722827750550974469]' derivation='User' name='[usr:Calculation_722827750550974469:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_722827750550974469]' derivation='User' name='[usr:Calculation_722827750550974469:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[none:Year:qk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_722827750550974469]' derivation='User' name='[usr:Calculation_722827750550974469:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Medal)' hidden='true' name='[Action (Medal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Medal]' />
        </groupfilter>
      </group>
      <group caption='YEAR(Year) Set' name='[YEAR(Year) Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='1896' function='range' level='[yr:Year:ok]' to='2012' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[usr:Calculation_722827750550974469:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[usr:Calculation_722827750550974469:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[usr:Calculation_722827750550974469:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country (summer.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CRC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ISV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RSA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BUL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;INA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ANZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;YUG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NED&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CRO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GDR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RU1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TOG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PUR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TCH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ZAM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;URS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BWI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PHI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BOH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KSA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FRG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MGL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TGA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ZIM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GRE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NGR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GRN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NIG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SIN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BOT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HAI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KUW&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SRI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LIB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PAR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SUI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;URU&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BAH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MRI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TPE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ZZX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AHO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EUA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IOP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GUA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SLO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BAR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SCG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ALG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EUN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IRI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MAS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;POR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VIE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Country (summer.csv):nk]' palette='flags' type='shape'>
            <map to='flags/ad.png'>
              <bucket>%null%</bucket>
            </map>
            <map to='flags/ad.png'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='flags/ae.png'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='flags/ae.png'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='flags/af.png'>
              <bucket>&quot;AHO&quot;</bucket>
            </map>
            <map to='flags/af.png'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='flags/ag.png'>
              <bucket>&quot;ALG&quot;</bucket>
            </map>
            <map to='flags/ag.png'>
              <bucket>&quot;GER&quot;</bucket>
            </map>
            <map to='flags/ai.png'>
              <bucket>&quot;ANZ&quot;</bucket>
            </map>
            <map to='flags/ai.png'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='flags/al.png'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='flags/al.png'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='flags/am.png'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='flags/am.png'>
              <bucket>&quot;NED&quot;</bucket>
            </map>
            <map to='flags/ao.png'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='flags/aq.png'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='flags/aq.png'>
              <bucket>&quot;URS&quot;</bucket>
            </map>
            <map to='flags/ar.png'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='flags/ar.png'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='flags/as.png'>
              <bucket>&quot;BAH&quot;</bucket>
            </map>
            <map to='flags/at.png'>
              <bucket>&quot;BAR&quot;</bucket>
            </map>
            <map to='flags/au.png'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='flags/aw.png'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='flags/ax.png'>
              <bucket>&quot;BER&quot;</bucket>
            </map>
            <map to='flags/az.png'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='flags/ba.png'>
              <bucket>&quot;BOH&quot;</bucket>
            </map>
            <map to='flags/bb.png'>
              <bucket>&quot;BOT&quot;</bucket>
            </map>
            <map to='flags/bd.png'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='flags/be.png'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='flags/bf.png'>
              <bucket>&quot;BUL&quot;</bucket>
            </map>
            <map to='flags/bg.png'>
              <bucket>&quot;BWI&quot;</bucket>
            </map>
            <map to='flags/bh.png'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='flags/bi.png'>
              <bucket>&quot;CHI&quot;</bucket>
            </map>
            <map to='flags/bj.png'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='flags/bl.png'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='flags/bm.png'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='flags/bn.png'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='flags/bo.png'>
              <bucket>&quot;CRC&quot;</bucket>
            </map>
            <map to='flags/bq.png'>
              <bucket>&quot;CRO&quot;</bucket>
            </map>
            <map to='flags/br.png'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='flags/bs.png'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='flags/bt.png'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='flags/bv.png'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
            <map to='flags/bw.png'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='flags/by.png'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='flags/bz.png'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='flags/ca.png'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='flags/cc.png'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='flags/cd.png'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='flags/cf.png'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='flags/cg.png'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='flags/ch.png'>
              <bucket>&quot;EUA&quot;</bucket>
            </map>
            <map to='flags/ci.png'>
              <bucket>&quot;EUN&quot;</bucket>
            </map>
            <map to='flags/ck.png'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='flags/cm.png'>
              <bucket>&quot;FRG&quot;</bucket>
            </map>
            <map to='flags/cn.png'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='flags/cr.png'>
              <bucket>&quot;GDR&quot;</bucket>
            </map>
            <map to='flags/cu.png'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='flags/cw.png'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='flags/cx.png'>
              <bucket>&quot;GRE&quot;</bucket>
            </map>
            <map to='flags/cy.png'>
              <bucket>&quot;GRN&quot;</bucket>
            </map>
            <map to='flags/cz.png'>
              <bucket>&quot;GUA&quot;</bucket>
            </map>
            <map to='flags/de.png'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='flags/dj.png'>
              <bucket>&quot;HAI&quot;</bucket>
            </map>
            <map to='flags/dk.png'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='flags/do.png'>
              <bucket>&quot;INA&quot;</bucket>
            </map>
            <map to='flags/dz.png'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='flags/ec.png'>
              <bucket>&quot;IOP&quot;</bucket>
            </map>
            <map to='flags/ee.png'>
              <bucket>&quot;IRI&quot;</bucket>
            </map>
            <map to='flags/eg.png'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='flags/eh.png'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='flags/er.png'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='flags/es.png'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='flags/et.png'>
              <bucket>&quot;ISV&quot;</bucket>
            </map>
            <map to='flags/fj.png'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='flags/fk.png'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='flags/fm.png'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='flags/fo.png'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='flags/fr.png'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='flags/ga.png'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='flags/gb-eng.png'>
              <bucket>&quot;KSA&quot;</bucket>
            </map>
            <map to='flags/gb-nir.png'>
              <bucket>&quot;KUW&quot;</bucket>
            </map>
            <map to='flags/gb-sct.png'>
              <bucket>&quot;LAT&quot;</bucket>
            </map>
            <map to='flags/gb-wls.png'>
              <bucket>&quot;LIB&quot;</bucket>
            </map>
            <map to='flags/gb.png'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='flags/gd.png'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='flags/ge.png'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='flags/gf.png'>
              <bucket>&quot;MAS&quot;</bucket>
            </map>
            <map to='flags/gg.png'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='flags/gh.png'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='flags/gi.png'>
              <bucket>&quot;MGL&quot;</bucket>
            </map>
            <map to='flags/gl.png'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='flags/gm.png'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='flags/gn.png'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='flags/gp.png'>
              <bucket>&quot;MRI&quot;</bucket>
            </map>
            <map to='flags/gq.png'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='flags/gs.png'>
              <bucket>&quot;NGR&quot;</bucket>
            </map>
            <map to='flags/gt.png'>
              <bucket>&quot;NIG&quot;</bucket>
            </map>
            <map to='flags/gu.png'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='flags/gw.png'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='flags/gy.png'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='flags/hk.png'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='flags/hm.png'>
              <bucket>&quot;PAR&quot;</bucket>
            </map>
            <map to='flags/hn.png'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='flags/hr.png'>
              <bucket>&quot;PHI&quot;</bucket>
            </map>
            <map to='flags/ht.png'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='flags/hu.png'>
              <bucket>&quot;POR&quot;</bucket>
            </map>
            <map to='flags/id.png'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='flags/ie.png'>
              <bucket>&quot;PUR&quot;</bucket>
            </map>
            <map to='flags/il.png'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='flags/im.png'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='flags/in.png'>
              <bucket>&quot;RSA&quot;</bucket>
            </map>
            <map to='flags/io.png'>
              <bucket>&quot;RU1&quot;</bucket>
            </map>
            <map to='flags/iq.png'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='flags/ir.png'>
              <bucket>&quot;SCG&quot;</bucket>
            </map>
            <map to='flags/is.png'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='flags/it.png'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='flags/je.png'>
              <bucket>&quot;SIN&quot;</bucket>
            </map>
            <map to='flags/jm.png'>
              <bucket>&quot;SLO&quot;</bucket>
            </map>
            <map to='flags/jo.png'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='flags/jp.png'>
              <bucket>&quot;SRI&quot;</bucket>
            </map>
            <map to='flags/ke.png'>
              <bucket>&quot;SUD&quot;</bucket>
            </map>
            <map to='flags/kg.png'>
              <bucket>&quot;SUI&quot;</bucket>
            </map>
            <map to='flags/kh.png'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='flags/ki.png'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='flags/kn.png'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='flags/kp.png'>
              <bucket>&quot;TAN&quot;</bucket>
            </map>
            <map to='flags/kr.png'>
              <bucket>&quot;TCH&quot;</bucket>
            </map>
            <map to='flags/kw.png'>
              <bucket>&quot;TGA&quot;</bucket>
            </map>
            <map to='flags/ky.png'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='flags/kz.png'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='flags/la.png'>
              <bucket>&quot;TOG&quot;</bucket>
            </map>
            <map to='flags/lb.png'>
              <bucket>&quot;TPE&quot;</bucket>
            </map>
            <map to='flags/lc.png'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='flags/li.png'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='flags/lk.png'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='flags/lr.png'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='flags/ls.png'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='flags/lt.png'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='flags/lu.png'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='flags/ly.png'>
              <bucket>&quot;URU&quot;</bucket>
            </map>
            <map to='flags/mc.png'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='flags/md.png'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='flags/me.png'>
              <bucket>&quot;VIE&quot;</bucket>
            </map>
            <map to='flags/mf.png'>
              <bucket>&quot;YUG&quot;</bucket>
            </map>
            <map to='flags/mg.png'>
              <bucket>&quot;ZAM&quot;</bucket>
            </map>
            <map to='flags/mh.png'>
              <bucket>&quot;ZIM&quot;</bucket>
            </map>
            <map to='flags/mk.png'>
              <bucket>&quot;ZZX&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Medal:nk]' type='palette'>
            <map to='#9c755f'>
              <bucket>&quot;Bronze&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Code' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='GDP per Capita' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select list' datatype='string' name='[Sport Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sports&quot;'>
          <calculation class='tableau' formula='&quot;Sports&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='dictionary.csv' id='dictionary.csv_43FF270C0387407A80F6E35EBB257455'>
            <properties context=''>
              <relation connection='textscan.1hkk1oi03m25on16d0l3p16xqvku' name='dictionary.csv' table='[dictionary#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' name='Population' ordinal='2' />
                  <column datatype='real' name='GDP per Capita' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='summer.csv' id='summer.csv_84E7128C415D484B9582BBE794D9B4F8'>
            <properties context=''>
              <relation connection='textscan.0gi8r050fodhkh15c3qtd0s3yfhe' name='summer.csv' table='[summer#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='Sport' ordinal='2' />
                  <column datatype='string' name='Discipline' ordinal='3' />
                  <column datatype='string' name='Athlete' ordinal='4' />
                  <column datatype='string' name='Country' ordinal='5' />
                  <column datatype='string' name='Gender' ordinal='6' />
                  <column datatype='string' name='Event' ordinal='7' />
                  <column datatype='string' name='Medal' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='winter.csv' id='winter.csv_EBE283BE5D374F88B0A291617956B2F8'>
            <properties context=''>
              <relation connection='textscan.0gi8r050fodhkh15c3qtd0s3yfhe' name='winter.csv' table='[winter#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='Sport' ordinal='2' />
                  <column datatype='string' name='Discipline' ordinal='3' />
                  <column datatype='string' name='Athlete' ordinal='4' />
                  <column datatype='string' name='Country' ordinal='5' />
                  <column datatype='string' name='Gender' ordinal='6' />
                  <column datatype='string' name='Event' ordinal='7' />
                  <column datatype='string' name='Medal' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (summer.csv)]' />
            </expression>
            <first-end-point object-id='dictionary.csv_43FF270C0387407A80F6E35EBB257455' />
            <second-end-point object-id='summer.csv_84E7128C415D484B9582BBE794D9B4F8' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (winter.csv)]' />
            </expression>
            <first-end-point object-id='dictionary.csv_43FF270C0387407A80F6E35EBB257455' />
            <second-end-point object-id='winter.csv_EBE283BE5D374F88B0A291617956B2F8' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_45B50CCC5CE942C787E8AA9D4E4E9A10]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Medal by country' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country' />
        <param name='target' value='Medal by country' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_19EBC30146D34BCB90993349EAFAE0EE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='D1 Analysis pf event by country' type='sheet' worksheet='select a country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='D1 Analysis pf event by country' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_ADB64860C8744197B618580D2F968FE6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='D2 athelete and displine' type='sheet' worksheet='Analysis by Discipline and athelete' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='D2 athelete and displine' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_5908684018DB4A6F99829F7C4FBB3F4A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='D2 athelete and displine' type='sheet' worksheet='Athelete and country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='D2 athelete and displine' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5_00111CFBD05E4717ADB46505F40290CB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='D3-Countrywise olympic yearly' type='sheet' worksheet='country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='D3-Countrywise olympic yearly' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_700C2E00AE474980BAA32E8DD3C975FD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='D3-Countrywise olympic yearly' type='sheet' worksheet='Olympic over the year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='D3-Countrywise olympic yearly' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Analusis of the events by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Times New Roman' fontsize='20'>Analysis of the event by country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summer+' name='federated.12rqoja0h25u19146aft21y02571' />
          </datasources>
          <datasource-dependencies datasource='federated.12rqoja0h25u19146aft21y02571'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Discipline]' role='dimension' type='nominal' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discipline]' derivation='None' name='[none:Discipline:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12rqoja0h25u19146aft21y02571].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2_19EBC30146D34BCB90993349EAFAE0EE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]</column>
            <column>[federated.12rqoja0h25u19146aft21y02571].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='dotted' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.12rqoja0h25u19146aft21y02571].[none:Discipline:nk]' value='152' />
            <format attr='background-color' scope='rows' value='#e9f0f1' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#1b1b1b' />
            <format attr='border-color' scope='cols' value='#86bcb6' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#333333' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#dae5fa' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='602' />
                <format attr='maxwidth' value='602' />
                <format attr='minheight' value='1340' />
                <format attr='maxheight' value='1340' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12rqoja0h25u19146aft21y02571].[none:Discipline:nk]</rows>
        <cols>[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]</cols>
      </table>
      <simple-id uuid='{E8F6EC40-CF46-49FF-9D1A-77D722F49059}' />
    </worksheet>
    <worksheet name='Analysis by Discipline and athelete'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summer+' name='federated.12rqoja0h25u19146aft21y02571' />
          </datasources>
          <datasource-dependencies datasource='federated.12rqoja0h25u19146aft21y02571'>
            <column caption='Discipline Hierarchy' datatype='string' name='[Calculation_812055318145372165]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Sport] + &quot; - &quot; + [Discipline]' />
            </column>
            <column datatype='string' name='[Discipline]' role='dimension' type='nominal' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_812055318145372165]' derivation='None' name='[none:Calculation_812055318145372165:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]' />
              <color column='[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]' />
              <text column='[federated.12rqoja0h25u19146aft21y02571].[none:Calculation_812055318145372165:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{70B02650-019D-4AFE-8BC2-0DFBFF5AABB3}' />
    </worksheet>
    <worksheet name='Athelete and country'>
      <table>
        <view>
          <datasources>
            <datasource caption='summer+' name='federated.12rqoja0h25u19146aft21y02571' />
          </datasources>
          <datasource-dependencies datasource='federated.12rqoja0h25u19146aft21y02571'>
            <column datatype='string' name='[Athlete]' role='dimension' type='nominal' />
            <column caption='Discipline Hierarchy' datatype='string' name='[Calculation_812055318145372165]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Sport] + &quot; - &quot; + [Discipline]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Discipline]' role='dimension' type='nominal' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Athlete]' derivation='None' name='[none:Athlete:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12rqoja0h25u19146aft21y02571].[Action (Discipline Hierarchy)]'>
            <groupfilter function='level-members' level='[Calculation_812055318145372165]' user:ui-action-filter='[Action3_ADB64860C8744197B618580D2F968FE6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.12rqoja0h25u19146aft21y02571].[none:Athlete:nk]' direction='DESC' using='[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]' />
          <filter class='categorical' column='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' direction='ASC' using='[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]' />
          <slices>
            <column>[federated.12rqoja0h25u19146aft21y02571].[Action (Discipline Hierarchy)]</column>
            <column>[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='157' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='false' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='346' />
                <format attr='maxwidth' value='346' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='461300' />
                <format attr='maxheight' value='461300' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12rqoja0h25u19146aft21y02571].[none:Athlete:nk] / [federated.12rqoja0h25u19146aft21y02571].[none:Country:nk])</rows>
        <cols>[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]</cols>
      </table>
      <simple-id uuid='{8792F821-405F-4AAF-B892-8A4C93159F32}' />
    </worksheet>
    <worksheet name='Count of medal type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summer+' name='federated.12rqoja0h25u19146aft21y02571' />
          </datasources>
          <datasource-dependencies datasource='federated.12rqoja0h25u19146aft21y02571'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12rqoja0h25u19146aft21y02571].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2_19EBC30146D34BCB90993349EAFAE0EE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12rqoja0h25u19146aft21y02571].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='66' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' />
              <text column='[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]</cols>
      </table>
      <simple-id uuid='{A1DC4592-D836-468A-AC1C-BB2A9B78AA42}' />
    </worksheet>
    <worksheet name='Event occurance over the year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>Event Occurance Over the Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summer+' name='federated.12rqoja0h25u19146aft21y02571' />
          </datasources>
          <datasource-dependencies datasource='federated.12rqoja0h25u19146aft21y02571'>
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12rqoja0h25u19146aft21y02571].[none:Sport:nk]</rows>
        <cols>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{D289F184-8749-4344-B749-8224E6958E63}' />
    </worksheet>
    <worksheet name='Historical Importance'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='20'>Historical Importance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summer+' name='federated.12rqoja0h25u19146aft21y02571' />
          </datasources>
          <datasource-dependencies datasource='federated.12rqoja0h25u19146aft21y02571'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='CountD' name='[ctd:Country:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk]' scope='rows' value='false' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='tick-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' value='#e15759' />
            <format attr='color' data-class='total' value='#d3b348' />
            <format attr='font-family' data-class='total' value='Wide Latin' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' value='#86bcb6' />
            <format attr='color' data-class='total' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#dfe7e8' />
            <format attr='band-color' scope='cols' value='#ddebf0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#4e79a7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='total' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='cols' value='#ffffff4b' />
            <format attr='stroke-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.8176796436309814' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.83458560705184937' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk] + [federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk])</rows>
        <cols>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{88092FAF-A6E8-4481-8C52-96DD298AEE33}' />
    </worksheet>
    <worksheet name='Medal by country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>Medal by Top 4 Country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summer+' name='federated.12rqoja0h25u19146aft21y02571' />
          </datasources>
          <datasource-dependencies datasource='federated.12rqoja0h25u19146aft21y02571'>
            <column caption='Year Selectors' datatype='integer' name='[Calculation_812055318131421185]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Year]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_812055318131421185]' derivation='None' name='[none:Calculation_812055318131421185:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12rqoja0h25u19146aft21y02571].[none:Calculation_812055318131421185:ok]'>
            <groupfilter from='1896' function='range' level='[none:Calculation_812055318131421185:ok]' to='2012' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Medal])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]</column>
            <column>[federated.12rqoja0h25u19146aft21y02571].[none:Calculation_812055318131421185:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='rows' value='#f2f2f2' />
            <format attr='band-color' scope='rows' value='#eef1f3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f0f3fa' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#de7ca2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]' />
              <text column='[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]</rows>
        <cols>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{A078F84F-8636-41C5-8682-8D8E4DD99CA0}' />
    </worksheet>
    <worksheet name='Olympic over the year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Olympic over the years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summer+' name='federated.12rqoja0h25u19146aft21y02571' />
          </datasources>
          <datasource-dependencies datasource='federated.12rqoja0h25u19146aft21y02571'>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='CountD' name='[ctd:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12rqoja0h25u19146aft21y02571].[Action (Medal)]'>
            <groupfilter function='level-members' level='[Medal]' user:ui-action-filter='[Action5_00111CFBD05E4717ADB46505F40290CB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]' included-values='in-range-or-null'>
            <min>1896</min>
            <max>2012</max>
          </filter>
          <slices>
            <column>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</column>
            <column>[federated.12rqoja0h25u19146aft21y02571].[Action (Medal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffaa00' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' />
              <tooltip column='[federated.12rqoja0h25u19146aft21y02571].[ctd:Medal:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]</rows>
        <cols>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{48556A1C-B3F3-4F86-977D-D8C9E22A4A65}' />
    </worksheet>
    <worksheet name='country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='18'>Countrywise medal</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dictionary.csv+ (Multiple Connections)' name='federated.0mycv5v1q7pjb612bh65g1r6kz7a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mycv5v1q7pjb612bh65g1r6kz7a'>
            <column datatype='string' name='[Country (summer.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (summer.csv)]' derivation='None' name='[none:Country (summer.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[Action (Medal)]'>
            <groupfilter function='level-members' level='[Medal]' user:ui-action-filter='[Action6_700C2E00AE474980BAA32E8DD3C975FD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[Action (Medal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[Longitude (generated)]' field-type='quantitative' max='30716501.65243673' min='-25280160.462875374' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[Latitude (generated)]' field-type='quantitative' max='10629548.48159501' min='-7580747.4628842995' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#72b966' />
            <format attr='font-family' data-class='subtotal' scope='cols' value='Tableau Medium' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#72b966' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[none:Medal:nk]' />
              <size column='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[cnt:Medal:qk]' />
              <lod column='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[none:Country (summer.csv):nk]' />
              <lod column='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.6132595539093018' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[Latitude (generated)]</rows>
        <cols>[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DEE927F9-2945-4AA2-90FA-396F4219C449}' />
    </worksheet>
    <worksheet name='select a country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='18'>select a country</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='summer+' name='federated.12rqoja0h25u19146aft21y02571' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12rqoja0h25u19146aft21y02571'>
            <column caption='Medal Rank' datatype='integer' name='[Calculation_812055318137344003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM(IIF([Medal] = &apos;Gold&apos; OR [Medal] = &apos;Silver&apos; OR [Medal] = &apos;Bronze&apos;, 1, 0)), &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_812055318137344003]' derivation='User' name='[usr:Calculation_812055318137344003:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12rqoja0h25u19146aft21y02571].[usr:Calculation_812055318137344003:qk]' included-values='in-range'>
            <min>1</min>
            <max>3</max>
          </filter>
          <slices>
            <column>[federated.12rqoja0h25u19146aft21y02571].[usr:Calculation_812055318137344003:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#f17b79' />
            <format attr='background-color' value='#ebebeb' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e9f3f2' />
            <format attr='border-color' value='#59a14f' />
            <format attr='border-width' value='2' />
            <format attr='border-style' value='dotted' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]' />
              <size column='[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]' />
              <text column='[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{98292CBD-A4DC-4A0D-BE27-E03263C448BB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='D1 Analysis pf event by country'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='6' type-v2='layout-basic' w='99034' x='483' y='929'>
              <zone h='98142' id='3' name='Analusis of the events by Country' w='54556' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='65738' id='5' name='select a country' w='44478' x='55039' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32404' id='12' name='Count of medal type' pane-specification-id='0' param='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' type-v2='color' w='44478' x='55039' y='66667'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='32404' id='11' name='Count of medal type' w='33313' x='62342' y='70499' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='21' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='280' h='98142' id='3' is-fixed='true' name='Analusis of the events by Country' w='54556' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65738' id='5' is-fixed='true' name='select a country' w='44478' x='55039' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='259' h='32404' id='11' is-fixed='true' name='Count of medal type' w='33313' x='62342' y='70499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='32404' id='12' name='Count of medal type' pane-specification-id='0' param='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' type-v2='color' w='44478' x='55039' y='66667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{627618C4-9D6D-4AF9-919C-484F87AD62A9}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='D2 athelete and displine'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' type-v2='layout-basic' w='50292' x='586' y='1042'>
              <zone h='97916' id='3' name='Analysis by Discipline and athelete' w='50292' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='663' h='97916' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='48536' x='50878' y='1042'>
              <zone h='85806' id='9' name='Athelete and country' w='48536' x='50878' y='1042'>
                <layout-cache fixed-size-h='461434' has-max-size-w='true' maxwidth='588' minwidth='588' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12110' id='10' name='Athelete and country' pane-specification-id='2' param='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' type-v2='color' w='48536' x='50878' y='86848'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='19' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='97916' id='3' is-fixed='true' name='Analysis by Discipline and athelete' w='50292' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='85806' id='9' is-fixed='true' name='Athelete and country' w='48536' x='50878' y='1042'>
                  <layout-cache fixed-size-h='461434' has-max-size-w='true' maxwidth='588' minwidth='588' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12110' id='10' name='Athelete and country' pane-specification-id='2' param='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' type-v2='color' w='48536' x='50878' y='86848'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{696DAA29-2203-4DAD-A265-316446B7D779}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='D3-Countrywise olympic yearly'>
      <style>
        <style-rule element='parameter-ctrl-title'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='summer+' name='federated.12rqoja0h25u19146aft21y02571' />
      </datasources>
      <datasource-dependencies datasource='federated.12rqoja0h25u19146aft21y02571'>
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='38281' id='3' name='Olympic over the year' w='98828' x='586' y='60677'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='59635' id='12' name='country' w='98828' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='11068' id='9' name='Olympic over the year' pane-specification-id='4' param='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' type-v2='color' w='10249' x='3587' y='42839' />
        <zone h='9505' id='8' name='Olympic over the year' param='[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='10981' x='84553' y='10938' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='21' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='59635' id='12' is-fixed='true' name='country' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9505' id='8' name='Olympic over the year' param='[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='10981' x='84553' y='10938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38281' id='3' is-fixed='true' name='Olympic over the year' w='98828' x='586' y='60677'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11068' id='9' name='Olympic over the year' pane-specification-id='4' param='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' type-v2='color' w='10249' x='3587' y='42839'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3EEE6981-DD79-4889-8C52-AEA7C24F767F}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>OLYMPICS</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5ead7' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='1' param='vert' removable='false' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='4556' id='3' type-v2='title' w='99000' x='500' y='889' />
            <zone h='11222' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99000' x='500' y='5445' />
            <zone h='82444' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99000' x='500' y='16667'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Historical Importance' captured-sheet='Historical Importance' id='1'>
                    <capturedDeltas>
                      <worksheet name='Historical Importance'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true' fontsize='9'>1916 Olympics cancelled due to the outbreak of World War-I</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord axis-value='1915.9868852459017'>
                                  <node-reference>
                                    <axis>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</axis>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='0.1282758620689699'>
                                  <node-reference>
                                    <axis>[federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='-2' y='-294' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='1' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true'>1940-Olympics cancelled due to World War- II</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord axis-value='1939.9344262295083'>
                                  <node-reference>
                                    <axis>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</axis>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='0.1282758620689699'>
                                  <node-reference>
                                    <axis>[federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='0' y='-491' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='2' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run fontname='Times New Roman'>1944-cancelled due to WW-II</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord axis-value='1942.8605737158105'>
                                  <node-reference>
                                    <axis>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</axis>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='0.14069591527988035'>
                                  <node-reference>
                                    <axis>[federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='4' y='-361' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='3' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true'>Olympics Boycott-65 nations including USA boycotted olympics</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord axis-value='1979.8812541694463'>
                                  <node-reference>
                                    <axis>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</axis>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='35.657099697885201'>
                                  <node-reference>
                                    <axis>[federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='-1' y='-257' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk]' field-type='quantitative' max='95' min='-2' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='1' field='[federated.12rqoja0h25u19146aft21y02571].[ctd:Country:qk]' field-type='quantitative' fold='true' max='94' min='-2' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]' field-type='quantitative' max='2023' min='1884' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Olympics Over the Year' captured-sheet='D3-Countrywise olympic yearly' id='2'>
                    <capturedDeltas>
                      <worksheet name='country'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[Latitude (generated)]' field-type='quantitative' max='12945043.660041906' min='-6062698.2472968185' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[Longitude (generated)]' field-type='quantitative' max='27731662.169759668' min='-35991793.338983923' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Medal by Top 4 Country' captured-sheet='Medal by country' id='3' />
                  <story-point caption='Event Occurance over the year' captured-sheet='Event occurance over the year' id='4' />
                  <story-point caption='Analysis of event bsed on country' captured-sheet='D1 Analysis pf event by country' id='5' />
                  <story-point caption='Analysis Discipline &amp; athelete' captured-sheet='D2 athelete and displine' id='6' />
                  <story-point captured-sheet='' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{26371B9F-F0DF-42CB-9612-C0A4C58EB2BB}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Historical Importance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{655C3F2C-C1F0-418A-AE11-93767CB5BDE2}' />
    </window>
    <window class='dashboard' name='D3-Countrywise olympic yearly'>
      <viewpoints>
        <viewpoint name='Olympic over the year'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='country'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{D2C8C0FF-44A7-43D5-8BF5-BCFEF6464511}' />
    </window>
    <window class='worksheet' name='Medal by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12rqoja0h25u19146aft21y02571].[:Measure Names]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Calculation_812055318131421185:ok]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Country (dictionary.csv):nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E67DBAB8-4A63-4433-832C-A145714C1F95}' />
    </window>
    <window class='worksheet' name='Event occurance over the year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='104'>
            <card pane-specification-id='0' param='[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Event:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Sport:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7B3B811-70F1-48B4-BE5E-231CD978453A}' />
    </window>
    <window class='dashboard' name='D1 Analysis pf event by country'>
      <viewpoints>
        <viewpoint name='Analusis of the events by Country'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Count of medal type'>
          <zoom type='fit-width' />
          <highlight field='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='select a country'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{C2C70D55-AFEE-4E62-A16F-23AE697D8BCD}' />
    </window>
    <window class='dashboard' name='D2 athelete and displine'>
      <viewpoints>
        <viewpoint name='Analysis by Discipline and athelete'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Athelete and country'>
          <highlight field='[federated.12rqoja0h25u19146aft21y02571].[none:Athlete:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E8B50C83-F196-40CA-9012-6502B038C78E}' />
    </window>
    <window class='worksheet' name='country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[none:Medal:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[cnt:Medal:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[none:Country (summer.csv):nk]</field>
            <field>[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[none:Discipline:nk]</field>
            <field>[federated.0mycv5v1q7pjb612bh65g1r6kz7a].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CF70CE7-A380-4C6F-BEA6-381EA8B22E84}' />
    </window>
    <window class='worksheet' name='Analusis of the events by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Discipline:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Gender:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{620B7109-924C-4375-9A17-553FC87747FD}' />
    </window>
    <window class='worksheet' name='select a country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12rqoja0h25u19146aft21y02571].[usr:Calculation_812055318137344003:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63FA7E5D-81DF-48F2-B8BA-AA097A55FCF5}' />
    </window>
    <window class='worksheet' name='Count of medal type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{460C9EA9-D5C2-4708-A281-20BAA6E1EF4B}' />
    </window>
    <window class='worksheet' name='Olympic over the year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Year Selectors Parameter]' type='parameter' />
            <card pane-specification-id='4' param='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Calculation_812055318131421185:ok]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEB916A1-7236-4F6A-A9DF-6F27F7CC44F9}' />
    </window>
    <window class='worksheet' name='Analysis by Discipline and athelete'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12rqoja0h25u19146aft21y02571].[cnt:Medal:qk]' type='color' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Calculation_812055318145372165:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Discipline (winter.csv):nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Discipline:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8BAEA9CF-F754-4A36-974C-7BAB6A39C06D}' />
    </window>
    <window class='worksheet' name='Athelete and country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Athlete:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Country:nk]</field>
            <field>[federated.12rqoja0h25u19146aft21y02571].[none:Medal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{409CF198-443A-4AC9-8589-7CB89F557533}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{02824D48-F7AB-4364-9ECB-7E1A733A5C3C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Analusis of the events by Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WYxjaZbf97s7yXu5M0gGY889s6qya7qnPdZogyB4AEmQBEE2ZAMyIL8I
      MPwk9YMACRD6wQ9+MLzAUMOCbL1YfpBHaNuCNIJH0mgZjTQ9W3ctmZWRmZGxc9/Je3n364eo
      yq6sXCOTjExW3t9LZvCS/zhk3MPvO+c73/mEKIoiYmLeU8S3bUBMzNtkaRzg9PSUTqfzts2I
      +ZaxNA7g+z5BELxtM2K+ZSyNA8TELILYAWLea2IHiHmvEb5Kg84cl/AdzoiORkPufvYZqqrO
      VTeKIgRBiDXfU035qwcs1yEIF+sAge8SRCKqIj/xuO/7yLL8nFedoSSSPJhmmczcc/3OWjHN
      X/6V28+9/iq/+7zEmsujOV/Vl9A6PmASaGzVVphaJilNpT+e4c2GSKpBrVamflJndW2V0WBE
      JKmUChlmlo2up/jde3V649m5fuf1zeKC3k3Mt4GLdYB2FzeUyUgeYq5Co9Fgc+cSh/tjknLI
      o3u7uFFEeOIytlQ2Sy4nh30S+TX0izQ05r3hwoLgwB5R2rjBjStrmL5KIZ8mqUmc1lvo6TSa
      liCbyyIpGoV8jpVyiexKlXZ3SCmrXZSZMe8Zj4Pg3mSy8BjgvNiTIcNZSLVcQADuHw1xvPMt
      hmV1je9drz33+rLNWWPN+Wq+0w7wdQSg0bXw/HCuukEYIonzHQiXVXO1lKZWTL+R5rI5wEJj
      gId3P6WyfYN06ix1Oej3yWbT2E5AKpV4/Fg+l8achej62VQnCj0e7D5AVlNsX95+PE/7n371
      J+cOgmNenf/iT37If/4nP3zbZlwoi3OA0ENUEvQ6XVpWHzWV5mh/nxsf3MB2I+78wR4bV6/y
      8Iu73P7OTboDn5k5pLq+hWx1ya1tMW01eXfHpJhvAwtzgEHzFNMN8KddioUsm1tb2JaFntSw
      nBmrazUmkxnlSplUQsZ3p2hGHj2lIcppmu0+iuvihQGCICLNeSEkJgYW6ACpQpUPVzVcx4Ev
      b961WhUfjUpZZ9LvUcyX8Gdj3CjJ5k4O1xwSBBGJdIla0MP2DSTPwZcSSLLAjc0iI/N8C2Ev
      Y9lWLhepWc6/f8nmpQqCi2kDcc6B4LIFbbHmfDUvZCGs32xglKuIYYAkS1hTC93QsSZjVD2D
      LAJE+H6IELp4qCRU6SmdH/ydX6c/sedsXcSZe8Wa76Pmwh0gigIGgzbTQKFzcJfqlRsMTo9J
      ZAokRR8DgU79lEzeYPfOMbe/cxlUg+NHR+SLefq9ERuXLpNSJUamw3A6bweIeZ9ZuAM4kz69
      iY9sNyiUa1QrJULbQRFDXBdOj45QFIUQgdr6BnJgcXw4onL5CqlgynAIruuResaIEBPzpize
      AdyIj7/3XSb9DoQ+rVYPI20gChGq75NfUajX2yRTOazBMb6Up7pZpnO4R76QhwUEfzExX7FU
      QTChRDjnlYEgCJCk+Y4usebyaF5oNeib8m8+OcBy/Kce/y9/5fZrjxLLlrWINeerOX8H8Cx+
      /9N7gMBHH91iOBhRXFnBHPVotodsrFeYOQFR4JHJGFhOgBh5RKJK83ifldomqhgSShqqBJOJ
      SaFUQhLg13774TNLIf7yf3KbeJYU8zosZgSIIgRRxJ6OON5/wGTcBzWHLImcHJ/gODalXIZu
      4OH5YE3GyIpMEEFCFTk+aiISEgoRxZRMe5xlNassxNSY95uF7AcQBAERGAyGpNJpwihiOuxj
      uz5J3SBlpMmmDRAEBEEgncuT0DRSmsxgZOI7Jo4fkUjp5HLpd3qvcsxyM/8RQEnx3e9995We
      mnzO47XVypM/f/nvn/vD154ZA8TTn5jXZamC4F+6uf7M0aDenbzwdaulNGLsJTHP4EIcYNRu
      0BpO0NM51lbLz3yOZ06wRY108udtT3qtFooEcq6CLsPf+t9+47X2A/zDH/6nJNSl8vWYC+JC
      7orZ1CSMIuyZTadxTHtgUTRUTF8kn07Q63Uxkmna4zGZTJ6U5DM0PTQRkkqElqnEm+JjFsLF
      bIqXVC5dvYJnW/S6XRqNBkldx7XGHB8dEUQiESGrG1sEjkmv16dTb/D0bD8mZr5cyAiQzac5
      2tujsr5BYA1I5avIsoyeLXC5nOfkpEFupUy7Uae6vok5aJNbqZFOp1BEEL+0sphJvtaCVzz7
      j3keS1UKEe8HiDXnrbmQESBwZ5ycNsmvVMkYTyY7fcdGUBNI3/haDn2PABFF/nnNhz2bIQog
      qkkUEf67//PfMTKdudoaRfNPo/7ZX77GH7m9NV/RmIWwEAdwxm20Qo2Tw4fUKiUGU5dK0aDZ
      GZNVQcwWkQWRQaeBnk5z784u165s0xxNqNU2CGdDnEjFNydnQXDtKnkVHp4OlqIrxB+5PV8n
      jVkcCyqFCKkfHpDUNMzplM5hEzWxRRD6+H7I3r09rq/lGExmeIhUa2ukUxqhnmPYbSJFIe1u
      k2IpvxDzYmK+YiFZIElJosgCiizjBz4pXUfVNELPQ9J0rl9ewxNUVFkkk80jBDamB/36EVoq
      gx8E6HqKZCqFlkx9uWUyJmb+LFUQ3BnYeMF8bQyDAHHOtebVfIpK4c06rH2TZQsul0VzqZZH
      b2yWliYLFLMcvPZfPjI7/N6DLilV5Ob1K/hBiKJIeJ6Poij4nosoyY/z9gLg+QGKotDYf8DE
      D0kkM6ytlhAEidOTIzY2NvH8AAmbVt+jupLF9wMUVY0L3mIWwut/9YU+fhASBNBvHvHTn93n
      2oeX6A1ctis5epZL4NuoYoJI8MAxOTzp8J1f/mP4no8oK/jOlJ/85l1I5KiuZDjau48fBsiK
      QqPrkpRsPvvZp1z93h+nVnhe7WhMzOvz+vMJAfR0BpGQ3mjKejmDrJfQsOmPTBRNJQwjbGvM
      cDgBSeXazVsYCRlEmfWtbbY3amSKFa5cPsuZR4CiyCSMLClNod8fsrm1xsyKW6HELIbXDoKj
      MGAynaJqSSQhwvMDVFXFth10PYVlmrQ7bVarVSJBQlMkrJlNSteJggBRlhEAZ2YRiTKyJCIK
      MLNdUnoS27SQVQXP81G1BIokxivBsebcNZcqC5TXdQRBQJLm5wTL9geLNeerOYc7KWB/d5eH
      ewfP37oYRYxH4xdIzBiMTAb94Qt/01/97/8Jf/Fv/19vYGtMzJPMwa0CXF8AZ8pkMqLTaFKo
      1Bh3GihGnsAaohh5OqcHJIwCV69eot1qoUgCfuAzGIyprRboj0BwLWbTAZYnYKQ00imFUM2R
      Ti5VtjZmiZjbXEJRBOonx7hBhGMOmdoBrfoRPimqKwXypSqGphAKArZpMhxPmU4tLu2s0+/1
      zkQij9PjBoHvI4UeR40BeiK++WMWxxzuLglVjgjEJDvrK5wcN0gZWSzTIVfcQIls2r0R2WwW
      gQgBqFVLdGcRWTXk8KjJxtYWlg0EGnpKww5lCqU0PXOAb08J5RRJJa6HiJk/72wQPOp3SWYK
      qF8WAsVBcKy5CM1XvpOiMGA8HuG43guf89iJohA/CInCkCD46mTHCN/3n1kq8MRrgWyhhEhI
      4Pt89fBJZzzXmz8m5pXdKpy2OWz5YJ9w7fImnYFJtZTlpN5ibXODfvOUhCpRHzhUKxXyaZWj
      gzr5FERGmWm3SXVjjZP9EyIhYL1WpTMwyefSpFJJBo1TmlObzY0t3GkfT9Cwh30SX9sPMJjY
      bK8u8uOIed84x7gSYU7GGJrE/XtfEHg+knwFa9Tlwb0J6eImWdlC0zOM+m3y2R2EyGNgCaj2
      KcXVdQ4PDpE4q7x8eO8eXgihW6QvCAiiTK5UpnFyhCpGNNvHrKwUFvS2Y2LOeOX5hCDKKJKI
      KAhkMlmMQpnQsZBVDU3PMOmeYLkhhqGjaWfn/ebSKn6kks0YHO/vk9TTKIqCoiiksxmMXJHq
      2jrtbp9STqffOEHREszsGQlNQ1IUZEVBjAvhYhbEWw+CZ5MBo1lItVx84fMEQIgkSrn5dgha
      tqAt1pyv5ltPsifTeZKvuHekkIkrQmPmy1t3AEKfu3fuIkgKtUqO9gQur+p8ultnJa+TyyRx
      BT2++WMWwtvPKUYhtuPgui6BH2CaJu1WH00VyRkqdx7UycU3f8yCePsOABTKVbK6iusH5FIS
      HTNEkwRGoyk5XWHmBm/bxJhvKW9/CiTKaGKIkF2hlE8TCRKu4yKJAmEUsZpQsR0fiI9JjZk/
      b98BBJHV9Se7qCnfiPiTcTVozIK48Dsr9F0OHu2TypaolItPbHaPAh/L8dFTiWe+9m/8r/+C
      /mTe2yMj3qR97h+9vclf+VMfz8+cmAvlwh0g8BxS2RVGnTpJNaTV6lOtrhAgQRgSiSKtk30E
      LU1BV2h1uqxu3yCTlOiNZ+9ca8TJzH3bJsS8AW8hCI5oHO8TSjLt7pDLl9YZjG0efP4JCU1k
      NJ6gpDLIQshwbLGxojO24yA4ZjFcuAOIkkIyoaEoGiv5DA8fHZNOqVz54EOmpkta19H1FLqu
      k9RE9vaPEeNaiJgF8dZLIV7EuN+mO7DYurSNLIDvCXM/MjUIAqQ3aI2YSijk099oAb9k5QDv
      s+aFxABRFOC6IZp2vsOuM4Uyma8VhP7ki5NnHpP6RraFIcIbtlr5/vUaVzdeXMsU825ybgeY
      9JocNwdUamvIkYumZxFCl5kTkM2kGAzG5Ap5rPEQOZkmocqM2g2k3Cqd42MSYohglBA8CyOT
      QxAFojAk9BycQGAyGlBbrRIIEqPT+9QnItvbm2T1BP/4t+6/c0EwQM5IxA6wpJzbAQb9CVdu
      3UQh4O5Pd5mRIJ0QiESFSU9C1ZMc7HU5PW6SyuX53scfMnUj1jWJ1nRI35f4sLzCJz/bR04a
      GLqOEIXIeOwfNKluVPhi9yHXb1zny9kZovBOLFjHfAs5twPk8gYP7t6lWjSwQhVFFkgZmbO9
      uqHHoD8gZWRIZzNUaqt4zhRZMwDQ9Cw5OeLw0SFi6myTvBxYCEaZcfMAI6USyknyiotpewiS
      zNblqxjPXhaIiXljFh4E99tN0qUKyjMzOSEHD/ZYu3yVlzV9EIB/89PjuccAYRi+cbvFX7q5
      xvXN0uOfly0QfJ813+ks0NcRAEKJkDMbk6pCRtfeWHfZ/mCx5nw1z606Gw84abSpbmyTTr3a
      Ddhv1tHLq1jDAWLooWZKJNVnpx4H/T75wlnqp9c6pT+csrZ9GV2T+Rt/9188DoJ/5fuX+W/+
      wvfPa35MzBOc2wHqzTaXr10Hf8bD3XvouSLjdoNQSVAwNAbjKSsrZXqDPulsidVKAcsLKIgC
      j44eIepFtpMmD/eOSWZyaKkMrjUBf4blS2iygDmZsLqxyWQ0QtMLJLW4GC5mMZx78isQ4vk+
      o24Hxw9ot1ukMgXSKY2pZbNZK3Oy94CJHRAR4VpjlGQGAD2TA9+h1+viexbjGQwajxCUBP3e
      gEajgT0dMrU9RAFWN3dIyybHjdHc33hMDLzGCLC5vc3x0QGlcpmUHZHLZ1FlBYQIMQpodYZ8
      8Iu/yOnhEYau0+91KK1tAFAsr6JIEVPLwY9EsvkcreMhKyt5olmRQk0na6QQogAvjLDNMUNL
      YmPrzIGyuvY4TkklzreoFhPzLBYeBHuui6Kqz7wWBT7mzMEwXt7pQYD4gIxYc+6ab3w3RVFI
      p1nHdp+dnnzq5o8iBp0Wo4mJ4/mPb/7Qd3G9F1d97p0O3tTcmJgneGO3Ot3fI5mvQOBy8PCA
      fKWGM+ky8yUqxTT1Zpf1zQ1aJ0dkV2okRJtmb8paLcXpSZ1aZYV6q0+1kGAYGERml2RuBdwJ
      46mNSERlY4ekIjKNa+9j5swbjwBOEFHIpZHxmXkeR0dHmDMXCZfj0xZr1QL3P/l9OhOHVquN
      ksyS00VOGy0AzOkEZ3hKc+QxG3cRkwWGnSaT6QzJdSmU0/QG7179T8y3gzceASrFHLu7uxTS
      BoIok1QVdCOJKIKmeBwc1lnd3qHZ7JHL5wg9h6npoqoJEpqE53koCR1NVVG0BMP2KZqRI6XJ
      CKqPomhoSrwhPmYxLNVKsCqpZOdcGLRsQVusOV/NpVph+ny/jeMFbFWyXF6LO0fHvDlzySma
      gw5ffHGP/mhKEASEYUQYhgRBQBRFX/7L45+j0OXuJ59yeHT65QEaZ4+HYYg1meB/+ZowDGg3
      2493gf3v//Sn/M//6Cf81ufH8zA7JmY+I0CzO+DGzRsIoc/Pfve3CRJ5UoJDEAkYmQy+5yKL
      IodHJ6RLNX7hoyuIQoQoyTx68AUEHoKaY+LMMCSJpK4wtV1EZNqNBqlM9pXrjmJizsNcRoBM
      UuH4pMGg20IyioiRj5ErUC3n8fwQXdfxXJtCZZ3NtQqEIdlSmVG/gyjJJJNJiEQ2d3ZQJBEE
      hY2dHTRVo1DIIsvxhpiYxTCXEaC0to05GaEmDbYTBoqWRJZEBKBQFphOp1Rr61jTCZKaBFEm
      bSTJFa/RbRxjFCtUU0kiQSS9vQWCgChJrK5V8d0c4pfds75/o8Zk5rJVzc3D7JiY5coCxaUQ
      sea8NS98buHZJnsPHjC1zlZ1bXOK/+Uhko455smKigjHcR7/9IMf/frFGRrzXnDhadDjoxM2
      L18Fe8Tu7jGZZIJMKWTvqE4mpYLmklAlep02umGwd/8ht7//S2T1BHNuCRQTc/EjQBRFZ3P6
      wCGZLxM5M+qtLjtXr6HJEfsHpzjDLjM/JBQkVtfW4wxQzMK4cAfY2Fjj0YP7WMFZR7V0Ic/m
      2ipHew8REjk+/ugqSjpPQhJJJnWSKkwt5+XCMTGvwVIFwelkkoQ6340wyxa0xZrz1bzQEcC1
      Z3j+63d6VuW4KC5mvlxYEDzpNmgOZ5RKRRQxJBQ1Jr02pdoGzqTHxIF81iChSLiRRL95SraQ
      585nd7lx+2OyetwdK2b+XJgDDMZTtrYvo+Lxs7sPqOZ19HyZw737yGoCAp9Tc8RWSWf3sE9I
      yNj2KZVWyMQ3f8yCuLApULlU4OHuPTr9EeVyBcPQaZwcoqXSOOaY3mCCIkTsH9Ux0hkUWWFl
      pYRnT5iY8z4WKSbmjHcmCG7VG6zUVp/rkfFKcKy5CM13Zj9Apbb6tk2IeQ+ZmwPYkwGHpy3K
      qxvks19vcxLQrHdJZ3R0w3j6haHPF3fvgqSyVs7SmQrsrOp8tltnJa+TyyRxSFGIT4uPWQBz
      c4B6o8PV69fxrCGNtos/G2KOJxRWVzHNGY5r0qof4douhWqNbrePpChcv7TBzHaQZfD9gMl0
      RrvloCoCmZTC5/dP+f4v3p6XmTExTzC3CbUqw8SyEZQUZucAOZFC0rLks2ff+r7voyR0tjbK
      DHtjKltbRIEHQKm6Rs5Qcf2AXFKmYwZoksBkMiWTkrG9cF5mxsQ8wdxGgPWdq9SPD5GKFbxI
      pVypkJLbTC2f2loFiBBEEUUS2NjK8OlPf49seQNEGTGwEfUCpWKWUJRwbQdJFIiiiOqGxsx2
      QYlToTHzZ+5ZoCgK8f0ARXl+yUIUhTi2g6olXvkI1DgLFGsuQnMuqlEU0T49RkkXKGQNlK8d
      9zKdThHgiQBYEEQSybOgtnG8jy8kWF+rIghPO0Pk2diRSkoV+Zt/7zcYTs+3JvCDv/SHuLoe
      H2AX82zm4gCjxhFhqoCuBAwnMyJvRuBYzEIZZzalkM/jOyad7pDy2gaD1gkoOluba1iOT0Gb
      0J3kGDcOyZVreNM+rqCRT8k0TvbRNz4mpaq0B+a5T4l8Wb/RmPebucwnbNvFSOtoyTSD1jGT
      yZSJ5bFeqwAw7PexZjO2NlZptU5R06v4rgnApN/mfn1MOGmzsnGJYbeJNZvRPK3THU65tL0x
      DxNjYp7JXEaAlY0NHj3cZbZSRcEnVSzjDpqc1tuk02mEKEJVZURZIZcr0m8eYX6593F16zIJ
      CTxBoXm4R6awgjnskM6k0RMyh/UehY2VeZgZE/MUcw6CAxqnbaprqzwvtI1Cn6P9ffR8mVIh
      ++qGArYdEZxzX2S1YJBQn+/nyxa0xZrz1ZxzKYTE6tqLSxoE8ezs39fhk70ms7kfkxq9Uibq
      9pUK1zdKL31ezHLxxg4QBS737u6SyhWpVVcQBYgQME2LcbdLrlJAUXU8e4aaSCGELpYTkMum
      aRw94NFBhw++cxtNlZBEgZntkckYTEYjPHNMoryGCqiKxI//7b1zB8Hz4r+SpdgBvoW8sQPY
      0yGZ8jprlTz7ew9RJBHb9Unni4RBgDlso6oGp6OQlNgmdHwszyX3ndusbm5hOSrRqMMRKgXZ
      Z/eLe6xsXcNIpRCcGYd373Hr1o15vNeYmKd44yyQpmcYtI44PmlQzKQYORFJVWQ6NX/+JEGg
      UCqjKhKB72LNvpnLl6mtrzIajigVMgSRgDWdgKiQy6aw4k3xMQvijUcAUU7wwYcfEQG9+hG1
      tTVyukYURU8sbOUBctvUo0f48ldtThQuXdl8/Bzj5odEEQiC8NTrAX7l+5cw7fnGAFEUIggv
      /x64vJaf6++NeTd4ZzbEvAwBkAWZ6Ln5pZeT1GSS2pMlGsuWtYg156v5VjbE+GafewdtCsUS
      hXQCOWkgi2fHplqOj556duHbD370z98oCP4rf+pj/sIfjeOJmJ/zVhwgsCdkVy8RDA4ZuEkC
      eUS5mKPbGSIoKkeP7iOoOgVdpt/vsbLzESUjPhg7Zv68xcb7Eb4f4tk2ubzOp5/sYqRT2I6D
      kSuiJxQsO2C9nMX23t2pWcxy81ZGAFkvYB0eUlldR4181GSWjY1VDENHkFQEAYgi7HGf+3uP
      WL+9BYCeULC91w+C1figjZhv8E4HwbY5YWy5rKwUEYn3A8Sa89dc+Agw6LYRlCS5bPrcr03o
      aRJf21//P/7qbzOxXu20+B/8pT8Ud5WOeSkLd4BWu03WSOA6HmHgohs6vXaH1fUa9ZNTKrU1
      2vVjyrUNes1T0sUqgmfSG5nUVis0Gy3WtrZQJZE7+51XzgJ5fryPOOblLHxSrKgalVqNWe+U
      rhnSOT3AdqacHJ5iux62NcGaeczMKabtcLD/iN5wiiZ4PHywhz2b0OmOF21mzHvKwh3Ascbs
      PTyivLHOSqlAPl9AkBIUSnlUMcL1QlRVwpyMAZFkMokYujTbPfKFPKKcIJNJLdrMmPeUdzAI
      jmidHDF1InYubfNVpbIAHLemuK84tfnu1VVU5eXt1JctaIs156v5zrRG/DkClfUtKs+44vkh
      3ivu8f3J3RMA0rrGx1eqc7Qv5tvE4h3Ad/jszj2yhRU2NmrPreTpdbsU8rkXlkL83X/8++cu
      hbi+WYwdIOa5LN4BohDX8xEEgf2HD0nIApPZjMZJnY0rV7AmFolEglb9hFsf3GQ08xh1Gmel
      ECmJybhHfucXqeXUhZsa8/5xIVMgI5sjm03jCi7NsUsiirh8/TqKIlMqrTLu91hZKZHQFEYz
      j2KlBmFA4NhkDZ13IjSJ+VayeAeQNcqFLIEfUKiuYZRCVFlgOJyQyaYRRIlUokLgZolElfXV
      NGchb8Soc8reXoPr62fB7C9crb7yQthXrK2cfwEu5v3hHcwCPZu4NWKsuQjNC80Cnew/wBOT
      7GytP/P6y/YD/Nf/wz99a5vi3zXKOZ0f/fU/87bNWHou1AHMmcvG9jr9Vp3uyKKUTdIZTiiV
      Vxm26mRLK0SCRP1oD0E1KOgKnV6XyvYt8in5LA0alzgAcanHvLjQ+mDPsZlaM05Ojog8D8t2
      2NjewezsI+c3yRsqU9MkYeTQZIGJ6bBZzmA68R87ZjFcqAOsbmxRLhWora0jaxrpTA5ZkshW
      L8HkhKHpkc2kSafTpDMZUprEw0dHSNLr7wOOiXkR73QQPB326I5mbG6uIwmQVDR4g03xz8IP
      fGRpzgHWBWgKIuiJN1sbWbaAdRGar60ahSGu5yLJCoIgIJ0jOxOFIYjiU7dyFEVEUfQ402Pk
      ihi5n1//Zz95yH/2Jz54XZOfie+LC/hwl0Mz5g2mQGbrIff2W1jTKaOxyWTQpdnqMpvNCH2H
      2cxiOBhi2zNOTxpEgO/OODmp0z8+wQw8rJlN4+QIczrlD37ndxiNxowmU4a9Dt3eEN+dcXx0
      9LgA7rc+P57X+46JAd4wC+S5DpHv0hvNECOfyPOYTAZslXTqXZMZOgnnAMtxQDVQnA4zFxQB
      9j77go+uX2Y0HNLum6QzWQxN4LgzxplZqIrMpO9TMEQ6E5/1fFwKETN/XnsEECSZrcvXyKZT
      yLKMa00YjKfIQsj+0SmSJFGulNHTaRJ6nnwmQcrI4EwGOIHI2lqRbruDH0koskTk24xNG0mS
      SKczaJqGLEG90Zr3tD8m5jGvPQLo5UucbdfV2dlIchxYKLrC9qWtJ+/X9GUeN0xPlPgw/2SH
      5W+e/1L42v8HnQbWzKOgn/UE+vN/+PrrmhsT80ze6SzQ1xGAydTHn7ONYRggii/fOPO2Nber
      GdQXnLz5OixbxmYRmheUVoh4+MXnyMkcm9sb35h3hYxHUxJShC0lyCR/3smh02igyiDnVzFk
      +G//j998b0sh/sHf+vNzd4CYCyyFMKcmOb3A6aMHmKZFprTCeDAkmUxwdHDCjWvb1PvHGEaW
      hODQG7ukkyopJUJ79ZOUYmLOxYWtBKdzJbY217C9kPVKlkZ7QG1zGz8IWa3VMFIJVjc2CT2L
      8cTCHA6IDziNWTQXNgJUa2eh8OZGjfZgync/Wufk6ISN7R2m/TaulGLWbbG+dQmz36JYWUfX
      NWQRxC+tXF9JYyTnmw6NiBDmnGZahOazDhGPeXOWKgiO9wPEmvPWfGe6xU6HPY6OTgm/dgyq
      aZpYkwHd/lljrL/99/81J+24SVbM/HgnHCDyTI6aY6qVIr4z4+HuLsPJjObpEZ/+9JPHz6t3
      J7h+HBnEzI93oroq8iw0I83e3U+IlBw7N69S338EosTK6jqlQuZtmxjzLeWdcAAxVUI63UVM
      pKmuljm6v0u+vErkzSCKg7+YxbFUQfDUDKiV0mjq/Px22YK2WHO+mu9EDPCq3Is9A4MAAAtF
      SURBVDvu8ms/ecid/fbbNiXmW8JTbjUddDhudjEyeVYrJURBIAgCHMdBkiQkRYXAww8FNFXE
      mrnoegpzOkUTA076NuVMAi2TwzWnaMkkM2uGkU4jEPLT3/73XPveL6OJAa5j0WoOqK0WcIUE
      gm+jKgon9SbVcglBSYDvIGtJVFniV//VXXrjGX/xj9/kg53y2/i8Yr5lPOUAg96Qzc11Tusd
      Tg4PSagSM8tB0CKGE5m0LuNMByAnqJXSfPLZPba2N+mOHK5uFBiMLFRrimCb+C7InQYd0+fW
      rZuEZp9cdZ1uq401qFNaXWXQG7KSjmjbGt1GnetXLzEYDEirEq4oYZoOa2s1VHm+xWUxMfCM
      NGgmm+L4pIlj21SKaZpDByORpFwpkc0VUWWRdK5A2kjR64+orBRB0dGlGaYnIQbu2bZGScR1
      HRKZArIzYmR5dNpdwihiMh5i5IqsrKygyBFhGCEqKQpphf7ERhUhDCMEUSTwXILo3Y1NYpab
      p4PgKML3fRBFJt0GnpxhJW+AIHD2zK/fjBFBECFJIoEfICsyge8jihKCKJz9X5IIggBZVoii
      EFEUCcOzLY6iKBL4HoIoAQJB4CHJClHggyAhigJB4COKMpIo8P/9ZB/T9vj4yiq/dGttLh/A
      sgVtseZ8NZcqC2QkkiS1uCY+1pyf5jOzQJ36MQ/v38dyz7/qalkWRBHm1Hzm9Ue7d7j/4BHW
      ZIzzjcMuLMuEKGA4Gj3ztf/wNz4/tz0xMS/iabcKZgytiGI+izvq4Op57EGb4WCE6/uoikYx
      n6ZvmuRyK9ijHmgpotkYNVPg+OEu29duEfgevdYpUiqDPexjlKpUVgpEkkJODOiOhkyPT8hk
      csiKCv6Mg0ePuHzjA06P9klmily/euktfCQx7xNPjwCCQOh7KIHJKErRfHAHUUuh50rohk4x
      m8KxQzavXMMZ1hlbDq1mCy2ZxDQtipUq5VKemTXDiwRWyyUSyQTmdArAsFPnoDvFkGU2L10i
      CkJsc4DrC6xUq5QKWYqVGintnVikjvmW8/RdJiaoFHU6oym1LZ2jrkYhn2M2cwiDBKokkQxB
      AfLlNcJun2K5jBTYGEYKQ41o94aUVkoEjkm7O0SURIzkWZ/+K7c+RpMETCdEk2XyhRyD5phc
      7RKh2aU7mJLLZc+mUeMJkiKAnCKpiEjSUq3bxSwBLwyCQ99hbHnkMsbiLIhCBsMxuVyOF+35
      iPcDxJqL0Hyhqihr5DLai57yUqIwwA8iBEJEWUH85l0uiOQyOr7vI4gi8te+5T3XRRBAkFVk
      Af6XH//OuU+Ieal9UTS33VblnM5f/XPfm4tWzMWw8Il24JjUeyZaYKOXK/TrDUprG0x7TUIp
      RSGjcnT/c5TCZUxzwPr6Jr41wEXDGQ9JKhFa7Sp5FT552Hqnu0JsVeLd+8vGhUSardNDBD/i
      UibNzLY4ODghIQfIckDdDNnYWKNlRhQqNTrNU2RC2p1TSiuFl4vHxLwBi3cAUWJj5wpq4BC4
      DoKkoKkKRipFBAS2yXG9i1HeYdA4xsjksSd9EskkiqahKBHx8QAxi2KpVoL362Ncb76nxYRh
      OLfAOpVQ+O611aULBN9nzaVKtouiiCTN10kFBMQ5DTGO5/Mf7hwTBiHiG6Zsk5oSn3B/AVy4
      A5ycHLO2VqR+MmNto/jEtVazSaX6/D/6j/7v332ng+B5sr6S4e/8tT/9ts341nPhDtCpH2Nb
      fQIvxWefNpBVFRUPxSgwG3UwZy7RbMBpa0htfZVyuch4JrJRzV+0qTHvARe+tJoprHD56iUE
      3yNhZBEJiZDIZzNIkkgYhDh+wM6lS9TWVtn94hHVSnzzxyyGCx8B1jc2AZntG1dxZhPkRAUZ
      n6kTsHnpGlEYIopVRmMTAp/cygryl1P0jy6VGb/DC2Hz1CxlU3OyJuZFLFUWKC6FiDXnrbmQ
      KVAYekwmz94PMB6NiCKP8ch66tr0y4rR5/E3/95vzMW+mJiveDwCBGH45G7HNyAixPdDlGd4
      red7yLL0zOsv8vTT+immE3LzytZ8jPySIAiQpPluuI81l0fz8d12nnN+X47I85o4SNJZcd2z
      rkvS81ufR2FI3nizwrxnsYi247Hm8mi+9wX2844pYs3l0pR++MMf/nDu6gtgNBohEnB0eIQT
      imTT+mvpuJMen+4+QpJV2vUDWr0JquCx+2CPZDqPppxvqPXdGT/97B61apm93S/ojCzkYMbu
      3gFGJsPe7j0sj3PtqXCsCZ/fe0R1Jc/nn36K6UX45oC9gxOyWYO7d+7iCyoZI/nqmuaI3Qd7
      2D70m8c0+xM0XO493CdlZNh/uMtkFpDLpl/5aI/As7l/f5fh1GHSb1Hv9NE1iXu79xGUFK3j
      R7QGJsVC7pU1oyhkb/cuzd4EMZjxYO+QTC7D/S++wAlFpv0mR40uxWLh6dL656ty9OgBB8ct
      NDng4d4hSjLFyaP7yzUCTPsNips3mE2Hr60xm9lEUUjgOfhSCl0JOGwN+ODWNdqtxrn1BEEi
      ocmATShkSAQup4Mptz/Y4f6nd8nXdnDN851pIMoaqgJh4GF7HmEQMJw6XNuu8Pnv3WH7g9tY
      o965NJVkmq1aGccZ40cp9MjnqDfmow8uc7C7i1FYJ7Cn5woDRVljZ2sDx3GwZhZhENBqtLny
      wYeMuocEGKRCj/MkrgVBJJ3WcRyX7sjio1ub3Pm9z6leuo496WM5UE1rjOxzqZLJZHAdB8sy
      CaMQz5kgp8rL5QCSrGBbJr7nv7aGamT54OZ1Ou0GnuPgOC4SIaZpgnj+liuSoiIKABKeN8P2
      PITAw5xOUVMpZjMLzz+fvYqqIgCRIHHz5kdYoz6e72GaJql0gsnExAvOVxRoj3ucDh2u7mzh
      eTa25yGFHpZpImkJbNvC9f1zHewUOCYPj9rcvH6Z9c3LFBIipuNgmiZ+KON5M2aed66bLIp8
      MoVVJN/C8zzMyYREOoU5NfH8EM9zmTkO8rmmRSFqKkdGCZHSZW5e26LV6OE61nIVw6XyqwTO
      gI3t1+8Wocoyjw4OuXztFu6kj43KdjbF4XGDnZ3tc+uZoz6BH3DSHFMp6fiyTtFQODhtc+uD
      GzRPD8lvnk931GsR+AGd4RR3MqC6uU1ahUZ3zM3bH3J0sMfWzvk+gxCBYDam3k6yWs5go1HO
      Jdk/anD95jW69WO09a1zOUAYRQihy9FJk2wCHNng1q1LHB4csHP5KtagjSsmOd/Xiki7vk+x
      tsVKNsFxs8+Ht29xerTP+vYlJG9Kb+qTPld/KIFRr4laWCWvCRwctbh+8yajTv3nadB3ncPD
      QzRNo/qCYrmYmPOyVFOgmJh5EztAzHtN7ABLSBSFDPq9p1pLvsILGQ8HeEGIORnhBSG2OWXm
      eE88zZnN+KosLAoDZufKuCwXS7UOIMsyhrHAHkVLwue/82/pzCL0ZJKjvS8QEhlGgy6z6ZSx
      OeX0YB9nNuFX/59/xpXrNxE8i8/u3EdVfH70o7/Pd/6j/5h/+f/+A6bkuPPvfszB1ECw2riC
      xmzY4sf/6MeUt7bYvXefXBL+1e/ucm1n/W2/7YWwVFmgmDNO2kP+xJ/+Y/Qe/ISRuM4X//Kf
      I4ghGmALId+9eZkvjgaUq2tkkgq//k9+jQ9/4SZ/sHvCrY9+gXxKQS+s4YzriFKCafsB//qh
      S6ncILTHbNbK9Dot2vs/w/K/87bf7kKJp0BLyIc3LvNbv/mbzMQM3cO75MtryKHH0PQwMnmM
      VAojbRDOBoxnHuu1Cnfu7rG+XsMwzlbQdSNDwulTuvwdCuUahUyC69eukVIEehObTqtJOlck
      oSnoqcRbfseLI06DxrzXxCNAzHvN/w/uKYNWhmEuEAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Analysis by Discipline and athelete' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Athelete and country' width='192'>
      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
    </thumbnail>
    <thumbnail height='70' name='Count of medal type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABGCAYAAACaNZvCAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACVUlEQVR4nO3bPWhTYRiG4adGwaQtNW1xEQpB6CJ0sIMOdVV0KBZ0cJBODhlSHaRdilUQ
      pFuxQnUT12rAUMlQ0MUOFbNk0wiBgoSCqJDkRCrhODi1hhoH89PnvqbwnS/wcuDmzZKeMAxD
      AaYOtXsAoJ0IANYIANYIANYIANYIANYIANb+GkAQBK2Y40Aol8vtHqFrdMq7YgPAGgHAGgHA
      GgHAGgHAGgHAGgHA2uFmLq2/fPG/5wDagg0AawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawSAA2Nne1Mrs9O6mSk1fF4prOnBzLTOX76iqZkl
      pQvV5v4TDHS0n9vaeLakh++HdO7kQOM7pawW7r7T2ftPNJs4op3iK83PL7IB0P0+v04rfyql
      p49ua2q0r8GNuvLZjAaTc7qaOKqIIoomJnUvGWcDoPuduJBUct8bW8rnRjVxrXfXad/4GTYA
      HHzXl2BYQ9E9x9FBAoCJ43HF/zgcIAA4OKbhSkGfanuOa0UCgIMRjY1/1NtcdddpJbdJAHAQ
      0djFSX1dWdRq8YfqqqtWzGhh5Zt6wjAM9/tqEATaWM+2alLgH5WUnkvp8YfGTy/dea5bp39/
      rhTWtLy8qjdbVfWOTOh66gYBwBs/gWCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCtqf8Ex2KxVs3T1crlsvr7+9s9RlfolHfFBoA1AoA1
      AoA1AoC1X6pLhuyHyb7QAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='D1 Analysis pf event by country' width='192'>
      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
      tS8xv1kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='D2 athelete and displine' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='D3-Countrywise olympic yearly' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d4xl2Xng97vx3fBi5ercPZ0mcQKTmEYUSQWS2qUivQpLGLIhrbWG11h7
      YRgGDPkPGwa0sGFBWssK1kpWoJaUKEoiRVGMEzhDTp6ezqG6K+d66eZw/McL9V51Veeu6um+
      P6DRdavOu++8+853zne+8wVJCCHIyHhAkXe6AxkZO0kmABkPNGrnByEEsbuwk33JyNh2shUg
      44EmE4CMB5pMADJuiUtnTvKt577Pq6+9wRe//HWSm7Qlep7PzZofReLx+b/6x5t81bVRr98k
      I6Of2vwEf/KVH/A//9v/HFmSqJQvIYRgbWWRuTWfhw/v5uRbp9l35CjTF8+z5/AxomYNRZWo
      eSkDRspv/+Ff8Uu//FkMBXzPo9GootkDjFdMrkwvEEYxo6PDLCwssf+hh1iYvMj+I4/wsWfe
      gxCC82fPYldG2D1aYXF2hmaicmjvGABCpMwvrhB7DQpDu6gvzVIY3kUln2NhZhon1Tm0d5TQ
      a2YrQMbN8+bLP2D3ocPIkgTAoUOHWJ08w7ffmMJwZ/m9L3yXxYkTnJppMnfhTd6+ssRv/V+/
      y9nJOf7g9/+YXGmEXE5h0Fb4zf/jdzh56izzkxd57fwCSlxjJcjx3Ne/hloa5Ctf/jtylsn8
      co2gNsXv/cnfcu6V77IqVThz6jRXTr3OlYbMi//w17x2cRGA1YUr/Pvf+iOWlpb4zf/zd1lc
      XuE//MFfMHHyNaYdlee/8gVePz/Nn/7lVzMByLh5CsUCruP2/e6Nl19mYGScQ088xeTbb6Lp
      GgC5nIai5tg1Psojjz7CUF4nbJ+9WsUK42Pj/MQnP8HHf+LTXHz1Ob5/co4PPn2Qn/n0R/j6
      N1/k6P4R/v6r36IydoDK8Bi2BvuPv4uXvvIXXFnxOHniBIuLizz83g8zbCsAVIZHGaxUePLp
      dzM4YPP0008hJy4n3zrB4uICj73/GdTVi9TlUiYAGTfPuz7wUbypE7x6agKnUePEqfM88uST
      vPzi96gtLfDE+95P3rZ5+43XuTy9xOzsPL7rECUpcRgQpQK3UePy9Dz1Rp1UCJA1fuKHHmKq
      IaNJEnsffS8XX3mOT//iv+StH7zC48d2I5KIuhNw4fxFfvqXfwVveYpjjz7Md7/5HWZm55GU
      ltCJJMIPY0Qa4TghIo3xvIjjjxzjO996lpnZeYq7DjJ58mWkjitEdg6QcTOINOHC+QskisnR
      h/YiSxLL87OsOAlHD+0BkXDm3GVGRwbQdY3zFy5TKBSo1xuM7NqNEjlIqs7s3CJ7DxxkuJLn
      zBuvMnjkCYbt1ta06bjkbYtm0yGft1mam2VqfoVde3axODfH+N4DDFds5memiRSLvWODACwv
      zDE5u0ylUmJtrUapVKBWa3D4+HGclTkSLc+e0QEa1ZVMADLuDf7qz/4E+8CT/PgH30V7a7Et
      ZAKQ8UDTZwaVtfxO9SMjY0foE4AgllEUZaf6si2sNZuowPVWWalnHe71GI/jGE3TNv1b53W9
      v5M2rOdeFOGGYfcQyNQ0NFnGiyKiNO22y+dypGlKEMeUTRNZlkna124YMpjPt/TuZrO1iWx/
      JkmS0GSZoml239sNQ5pBsPVnBSqWhSLLV/X3ejSDADcMb+o1t0LJNGksLxKFISJNqE9fAGB4
      /xEquw+QpilRFPV9N53PkgpB1fO6z7xkGLhhSJSm/QKgKAq5XO6uf5idpLG8TK3RYLxY7Nqx
      O3QemBCi7+fO/0IIgiDA7BlcNyoAQgiQJBZrNWIhsHS9NZh9n7FCAV2SCOK4O1BlIUjTFAlI
      kqT7/tVmkzhNGbAsEqDhujTarxmybQAWPY+coqAqCpIkocsyCjBTrW76THKKgq0oKIqCqqo3
      JATTq6tUPe+67e4EuqoSrS4xe3kCgCSOmPn+1wCQ5a/z4V/8dfLDu0iSBMdxME0TaD37zmdR
      hGC6Vmv9XCyy6rr4cfxgngS7UcSK4zCc71f5OoOsM4h7B3+HtD1LbxVH1Pv6TvtECLT2yjpe
      KvUJhaD1RamKQsWyqFhW915Jmna/REmSkGWZkVIJP4q6/TB1vSsAjSAgSVPi9kqht2dDSZKo
      tIVjMyHIadpVgnst/CjatsEPMGCaTF04073uFc80TTj17Ff5wGd/jTAMURSl+1w7Nn5JkjBU
      lZyiECQJQRzjxTEjtv1gCkBOUXCCgCCOGbJtjPZASXtUENh8kF9vduwITpymNHyfmu+Tz+Ww
      dB1b1/teL0nSNVWxzgzeN5PJMhItVSpKEhYbjW77II4BGLAsLF3v9idKEnRVpWLbpEIw154J
      O3hh2Pce1yJOEpZ63vN6KJJEcptBh2ng93030gY1fWV6ApEmKIpCkiRIkkTD95ElCUPT0FWV
      MI4RQqDJMqamcaBSQZXlB08ABiwLg9YXGSUJhqb1zfYdbiVStHMfQWswxklCKgQN30cCbF3v
      U682Q5bl7r067SRJIk1TwjhGURT8OGa12dzyHqW2CpC2V5BLS0uMFotUbJu671/9gvbqIl9n
      D5AKwcTyclfQNqLKMnsrFZabTXKqiqXr6IrCQqPRXaVuhf7vQrC78Bqj76tx4ZxFtdr6/hAt
      Fb4jKEXDYKZWY8FxkABNlluqpqoihECWZYQQD54A+FHUknxZ7s78G7mRwd87UDqDNk1T0jRF
      liRsXafheRiKQtmysHO5G5plN+4/eturikIQxyw1Ggzn832zvyxJjBQKXbWp00dJkrBzORbq
      deq+j7PJQIyShDXHoWLb3c/SixuGTCwtXdd7M0lTlptNRgsFJJHiO0208gBjhcJtCYBsGEiy
      jC5VOVD+Dnl9EQqwZ5/P6orG3PJRVF0n7NmMd1RGpa2C5lQVra0edSYUeAC9Qb04xnddpPam
      c9i2r9oMX4+OvrxxoCqK0rLWJAkAo8UiSZr2qTJb3avDxtWod18itX6BLEkUDYOSaXJ5ZQUv
      ipBlGVPXcYKgb+8iSRJ7BwZYrNf7BGYjdd+nbFmbrlBuENyQ67KArkUoiRPiOEGWZVZvc79g
      aDqHDugUnC+hyFHf32R7F4r8FN//2z9ncGwX44++t9UXITBVlSRJGCsU+vvZ83wfOAEQQvR9
      IYOWtaU1aOPren/eOFA7KsTG9p3B37neeO8bWW0677XQbFL3PCxdJ05TFup1SoZBlCTEScLE
      8nKrL5LE3koFS9cJowhNVSma5jUFIGwL7WbEG/ZG1yIVgmXHYci2McsVrqysXNMEuxmyJDFo
      28iBR1RfRY0LGMNPoeY+hqj+E9DqTyPYxaW1TwAStaV55k6/Shz6HHrfxxBCUDZNVFlGkaSu
      EWIjD5wAQMuKUDZNSoaB2qNz97XZcA6wmZVkM+vQRj26M/MLIYiTBE1tPfIoSUjSlJyq9un9
      W9HwfapuywOzGQRMLC8j2j9vfFUqBDPVKoeGhgiThNlajaH8tQ85EyGo+z6DG2bLKElYc90t
      XnU1Aqh63i1biSRg3LaYOvM2URiy8PaLpIHD+z7zOSp7fgGl9Gnwz5GQY3VGAVYBULTWpv/S
      ay9w5AM/ShS1Vor8dcz6D6Q3aMk0Gc7nu4O/F6U9Y8O6etIRgN7B3bnu/K53VehVd/qERAgW
      63UkWSZKU6SegX+twe+GIXP1et/vEiEw23sYWZJQZJkh28bSNIqGQZymnFtcpOn7DObzTK6u
      Xve5LDWbxBtWgjXHIbmJFeB2KZomC5cvErVVKQmIfI8ffPlPkCQIE5szjf1MB/sYyJ3gUPmb
      HBn4KsP580D/874Rq9YDuQKYPfZx4Cr1RJIkkiTp6vS9ArBxwPci2odXm/6+bR0yEVw48Tpr
      M5fxF6/w8DOfZHDfkS2tQ0maMl+vb6qDO51NX/u1A7bNoG237N6axmKjwbLjsOw4N/Rc4jRl
      qdFgrFTqPoftzpqWU1UWe4R9cCjElSOazZTG4hy5yjCpEDhBwP7h48jJPwBQKRtAiYNPfoC6
      52GqNza0H0gBaPg+OUXpmsSg/9TQjyL8KKJgmizU6wy2zwo6G11VVYnbpsBe+/RWQtG1PAQ+
      E6ffBiFI4pjqwgwvfvEPed9nPsfQwePdfvSy0UViMwStVYD2abMkSQzm8yiSdNXKcT3WXBeE
      wNB1ypbVVbu2DUlCVhREErG78ANGxs53T77EkIEXtyw6QRzjyI9QHPt1xNrXGBj1OPK+Z9j1
      7meYq9cZLxS2tPL18sAJgNa2ozfDkFySYG04nIqThOVmk7FSiTXXxQlDmmGIqaroqkpOlgnC
      kEI+TxAE6G3bPlxbh5dlmfnJy61B2osQXHzlWUYeeqT/sKfHj+dGiJKEMEnIqWrX/m/2DIBC
      Locfx0TX2OxCS01bcV1kz2v5y1yn/Z2m6jjs3juC3fw9bK3HOzn/PmKpgqqkVAyDhWaThUYD
      N/co1vC7UUZlimN1ZElmwDTRsxVgc6IkIU5Tlh2Hgq53Tws7rLouXhxzZXW17wTTax+fA1ia
      RlKrYZkmnud1fU869NqZe38XhuvWkHKpwbIkEELCra+B6Hex6FqRNtmnbEbn0KlD5/VK24mu
      Yln4cXxNS1AvqRA3tfm9U4RJQlwYIZ//COna1wGBXPowSfnnSOPWM2q2nQn9OEZXFbwrl3AW
      pzjw9IeRZRm95/vYymerwwMnAL00wpBGGKJIEkO2TdE0Sdp29msd37tRRKwoEMeYbXWo14ms
      s1/YqB4ZpkUcNNhbfIlB8ywcyXP+nE2+MgyS3BWCXjq+QUvX0eN7V4AOmqKwr1zGj2NMTSOn
      aSw3GmzflnZrZGAon6fqeSRC9G20dVnl0uxRVpfKLJ18kbEDOo99XAFSap5Hs70qqpIEAvZW
      TjCxkuv6Ad1sPzLaduIrq6vYuo5yA7Nu2DZjunFMHMd9PjubfQlJkrBr3x6OD3+VIesskgTH
      H3GoDEoc++AnrloxOgghMDQN+Tp+Q1GS9J22djbkqiyTb/sFKZLE8AYz506RNwyKuk45jck3
      qujT5xhIfMZLJeozk6wutTI8xGHIxBsvcfq7X2mtrEJ0n0PRMLA0jctzBxl/Yt302UuvI+FG
      87T8IPoCbURTFEYLBRbqdaI0ZaHRuGHLR833KRkGiqriOA5We7beyh1a0W1y+/8NrH0J/Auo
      9kM880s/RaTsuaaPkKGqPDQ42FLdmk0aW+wLvDBEbNIHaG3WZVm+eg+yAwzlbaKVZU6eeguA
      sFlj/s1nARg5cBR95CBy265vj+yhevkUE2++xMM//CmiNO1+P5aikFMVkkKCYRhUq1XUnhVw
      M7eO3gnqgfQF6sXWdSRgtlbrBpXczPCI0pQ1z8PWdTRNIwxDtLZzXYeO41VnX+AzhjL4X3dV
      pDRNu2bMayGEQJEkxopF8kHAkuNcdUJbMoxrqgBCCMqWhZ8k1LbRnbmXomnizc2yutSzwW1/
      9FxhgCSXJ00TpPYzUQ0TECRRyLf+8Dd58jOfYyxfJPGa2KbB9Ku/zdSESXH8STRNo1arUSwW
      rxr8nRW2Y8nrPO8HUgAkWvZm5w5EMiVCMF+vIwN7Bwc3VWU2WneEEMRt99wOGw/QNqNjUs3n
      cuRzOeIkYbJaJRWCPeUyxgbLx2bqWJqmDFsWpqqy2BNNtl3YSczlpQ2x5wLyYweoHHqsP1ZC
      CHq9/53qCi9/4fcZeexDVCfPkrhVdMNi5OBekjCgPj/N0N5DhHHcF9jVOwFdpQbd1U97D6LK
      cteCcKfIaRoJbXv8Ji7FGz1HZbkVeqps4u/fcZnYaIHpPYjrfhZFIaeq9A+Tzdn4xRdyOcqG
      cd3X3UnsXI5qd/CvC56iG1QOPkpnl5PGG3X59V6GbpPGwhWQwKtXiaOQox/8Uc6+9Tqnv/cN
      Lv7gWyRJ0j2n6XwfnWfX+/0IIR48AbgZx64bxW0fVm0VcrhxZu98Cb0Ha+qG2bvueQTtTV2v
      m0XvvzRN0doC4W+yAdzKy7RzWl0xTez2Bnk7MDQN1+nEMaw/D0XPgSx3f7Vy/g2WTr6ESGI2
      2/oH9VUUpfV7Z22ZxvI8BysvYMsTaIZJHMfdPU/vgN94LUnSg6kC3Wk6QuVGEU4YYut6n0vE
      xuCW3tPhDh1hSNvu0wO2jRuG5NpnFL0n1r0Du2JZuFF0lUfrxlPpja7bqRAE7RPv7UL0WHC6
      /SLG1pdohuMIIVibOEnkNYg9h9rkWazB0b72imFhFsuoyWz3Djm7gD30OY7YVfTKPmRF6e7J
      DMNotdrEQREe0D3A3aQz8Do+RB1B6DWR9i3BvSqNqpImCWHgo4Uuqm6gtn3aO/rrRs9URZLY
      Vy5377fZwY8QouXu3HaVAFh2HIzO2cU27QO8MMTKFwnaUWma3GTAvMSS+zAAEhL+2gKx31L/
      0uZl3v3+tznlSFyZLDJw6DGs4d1ISCydqQFNtJyBoqhE0hjlPeM01la5dO407sxZHvvEz+IJ
      ga7rV2U7SdMU13UzAbjTLDabjObzBFFEuSfAfSvrTGdWXFmYZ2VxHrfZAASLb7+EX1vGrgyx
      95GnOfDUB5B187r36v2/Y2ladhzcMERTFBIhCNsr1lA7Rrh+gwEvt4sXRYwODbO2vIitLTKW
      f4NLax9HsLmvvlAKrLgjFAeXqAR5zMFdSPQ76KlWkTe++bccfPzdjB16mJWpF0HoLE6cZfHC
      CQ6++yN4nkeapuTz+e6z8TwvU4HuBnGaMluvU1QUJqtVBtuelRuDZzorQhpHTF86T7RF0Iiz
      tsyZF77OhVee5YlP/DT6nsNESdLy77/OzC2EYKnZxNI0Crkccz2nwLamYbT/mZrG/DVijO8k
      nqKyf6/EQPQVJtZ+hNY2tH8bLykqg0efxqyMMNuE1Stv4CxNU1v+FkPH30MuX0ZWNEYe/xC5
      YgVveY4Xv/AHDB84wg+95yxrocNlClilCpIkYVkW9R6nwI4VLp/PZwJwNxCArOtd1aSj5nRC
      JTv6frO2xuUzp27o+D4OfF79yuc5/uEfQz/0ODOrq+yuVLp/38xFO45jTFp+QnXf73OBCJOE
      mVoNq+3lKnFzZyC3St3zUMvvQk4+SX1hsOcvbfVMkhk69m6M8vBV+4Uk9Fk8+RJjTzxDad9R
      lJzVeln7+S5dPs/5kacY3z/Ie35yjPGj70IIQa3RwNrgr2VZFo7jPHhWoO2ic8aw1eAOPZeJ
      s6e3+PtWxknBmRe+jro6S05RWGs08OMYseF9Oma/zsFcmqbYuRw5RUGT5VYYZZriRhHLrsuS
      42yr3/+q47Gs/yQpOu18dgAY6iqHH811B7+Aqx6FSGKMxrew7KQlL4Akr6tQ85MrBMPPUD70
      CGuuy8TKCiH0ZYwDuta3TADuEp3vbePMLEmtJFiTF88jtjTJXmM4CsHJb/8dJTNHIwiYWVtj
      rR3kL0kSURQRBAGe57U8I3WdhuviRxF7ymXKhnFHDgBvlyhN0XtMsMPWKR4e+jKFgd7QzbZw
      9Fm4BIHrI5EiE4IEafPK+iskiTCOW+lfRCsn0kA7KVjf+ycJ041GJgB3C7VtBeqlY6FxGvX2
      Zncrrn08FTgNFs+8gW1Z6JJEyTRZazSYXV4GSULXdXK5HIqmMVuvsxpFIElcWVtjyXXvylnI
      zSKEoFCuEDTWGFW/yd7Si8hSQpzmWuO9/Qh0pc4Tj01z4KCHorSeZxxL1CbPEYVt87Oz/rx2
      HXsCJwxZ8zzm6nWSNGVydZWG63ZVUGhF2iUPui/Q3UTZxKWhM0uvLS9e59XXV0hmzr7Fex97
      H6oksdZooEgS5VIJve2LJEkSc41GN9vDwjZtcq+HLEkcHh5m+sI51pYX8atLvHLCIX2Pwb79
      Pobaylpna4uM2icoG5eRJBgdgEcfb3Dlssly8C6GhyNqouUn1PabY3j/YfLHnmJ1wym6H8dM
      V6sMWxZaEmEYBnrObOVP3ebP/8AjyzJO43phiq3N4LVoLC/g+x5eEDJULHYjoDqrjr/B1+he
      IU1TGtXVvklACIm33iiwe4/PgHmBvD6PrS2ycQ7RdcGRoy5HBvax3NzN/OsXMPMKTxw/w7Oz
      RcaPPs6q67b2Oe1N76rrtkswyciqgj/514SFD6JVxhg2cpkA3DU2nLx2accDX49deyKUEQdZ
      AUURqKpA1wV6DmQpRVbWKBdUbLs/3Yksy8zUaveEnr8pkkTc07d9+33sPVXqdYVk6F+RaCWs
      dBZp+U/ZdCW0n6ShfZQrV14jchs0Jt7m6U97PPGBo4wcexJV05FlmcWpK9RnLnDk/R8jTFOS
      JMHUdXjkF7j05qscHDV59R//JhOAu4UbRVe5HwBtU1/bN0WKMNQqutLEUGroikNObf8/Vrtq
      BuxHJpX6T55lWWbNce7dwU8rR2ev0BbyPqN2wPi+YRa0x1lqOJj6OPvHRlHXvgjB5VZDtYJU
      +jhV/eNU6w6SJHj86ClO+QWi3f+GsX27WxFiQOzVaS6+gtx8hbBxhFxpP6LjeKiajB59gpof
      8siP/FImAHeLOE1ZdBzGCoWrXKSPjryCGr6BIge37o2pFBFC6zv9DeOY6mbJb+8hojRFM0zG
      9x1gbvIycaqDUiYc+lWW6y3d3QtDzoQjDBT+HblyiirF6HqZuuexWmuS0zSOPjxKPhjjh479
      cy7VTPI5h9F2tJthWxzfPwP7xxDl3SRi3RoXRVErLqJcaYWy7uTDuN9p+D6DltVNygqtwzCz
      OIZYvfVksQCYD5EIFUla93FP23HB9zoXlpYYKg/w0MAgJEdYUUyWmxGW1nLvliWpFeAvBAiJ
      qboHLKHKMokQuGHIpFTB1v8LvEZEnLZihdN2pj0B5Cv/ulWJZ7WB1XaIcxyHQqHQDZ1UVTUT
      gLuJoJVnZ2RDHG5q/xDS6t8DtzFYCz/czYXf4U7GONxNBK3JIVIUglhFkRP2VypIbAhjjNdo
      rkyjyGMkQvSZb1Mh+mOggXoQQBBQNAx812HB9dhfLqNLITl7oFsBSZZlGo0GhUIhOwe421R9
      n8m1tb7BGcvjUPzQrd/UPE6ce6zPt33Fce4ZU+f16KRyHykW2TswQCWXQ2kHCcmy3M2wkcol
      5MGHb7rARhDHhLKCDCRxjJIr4jgOuVyOxtIsQohu6GomANtAxw7teR6e5xGGIWnlF0Abu/mb
      yXkY/hU6mk4qBIvN5m2nIN8uNEXhoaEh7HbIYtq20HSCgjpRcqqqEoYheV1n1LIYyuf78jcZ
      msZIobBp3qQgjll1HIy2p229Xu/6X5VH95BrFyCMoigTgO1CAH77nxuG1J2UdOy/B23Xjd9E
      KcKuf0sghrq/csKQ2j2+8e2lbJpUJ5/l8usvoCgKYRgyMDCwaSy0ZVlUq1WGymXGSiUODg1R
      bOvzFctipFjk6Ogog7kco8UiBcNgKJ9npFBgV7mE0VzANM3uyXiznfxXlmVs226pkKK9OxNC
      EIbhfV8l8vzMDHM3kCn5bqDJcks/jSJ2td2kNTlEqf4nRO27XHNPYL+bZuE/Y6resmYUDAO9
      nd90ZkPNr3uZ0XyekhYQpwbIal/FzTRJWrW+tHUfoVqtRqn9rDqEcYzaNvsKIfA8r5uSphen
      2UQAuVyu6wzXiQ3QZIlqdTXbBG8nUZp2s7Q12sXzwkRDKX8OtfSTyO73Ed4ZiJZBJKANIhkP
      4epPsxwOUqt5dA6Hau26Y4cGB9EV5Z63/qiyzFA+30rR6KvY+asd1OLaqyzOy+x55D3rr9sk
      x2dv3s/N0lBCS0jQtKvqA5im2T07MYvlTAC2myhJKLezTkuS1MozmiSkUhnMH0e2P9kKo6Tl
      v+OHEZGXAFfr+ILWeUNOVe95ATgwOIjW1u9938cwjKvCFPWB97FnoP91N+POcenkmwwMDFAe
      39st6PfQ8HDrBLiHjk9W3rKzPcB2EyYJc/U6JdNk0XFIelylZVkmClpuzI7nUfe862ZnnqvX
      8aOInKoyXCi0Ct1dJ8nWdjPcrs5Yq9VwHIdKpUKz2aR5A1arGyly0WHAukRHjcypKoamsbzJ
      e/TlcL3hu2fcMVIh8KIIkabM1GrE7cqS5996ne//3V9y6eXvIK5TsrRDmCSULQu9XmX6te9z
      7st/RNFZu+H04HcbTVEYKRS6IYiFQqEbp2AYBs1mc8u8qAC6rrO6utqynLUtN1tRPvjTlMcP
      AK3BPWDb1DyPlZ73SOKIpemJ7msyAdgh3CgipbUvmGs0gJCDhS8xYE1QXZjZNK/lRnKKwpBt
      4y3Msjw/S5zE1BZmeO3Lf0JJ3BuHYsOFQjs1fNgXAJOmKaqqks/nu6bhjaRpShiGFNoHibVa
      DSEEjuP0CU0URV0Tc+ef4zioSYIKrQo7nSwaqsbQ7gPd194b08QDTpgk+LFMYffPsiu6iDH+
      I61DoXb+ng4FXadoGCw0GsRCECQJBUmitrLSKp+aeoyMhqwsKTRmJpDGD+2oS7RIU9L24NQ3
      6OG9pads2yYMQxqNBvl8HkmSCIKAJEmwLGvdStRODWNZFl773MM0TTRNu6pGQ7esVS7H5eVl
      6r5PcZN9R7YC9LCTakPT9/HkRyk89Bk0q4giywz2mPZkSeqWdI03DGpFFSDB6uVz7NvX5Ec/
      VcO0tVZl9C3Kg24HkiwTQdcW3/e3DeqdrutYlsXa2hqO4yBJUp+JtPOazum3ZVmYpsnq6uqm
      pvvO6zqBSTPV6lXVdh747NAbCXfQl2bF82gEAWXTJK+3fNpLhoGp60RxjEgSfM+jvuFLrLou
      o7vGmJ6YYPfYGivLOnuO7ccoHGO52bxpN4I7TW9gTu9gTjbZ3CuKgm3brWD1tgoYuk10q+U+
      HW9IetsRhI0B771ossRQEhDZJeZqNZQe1/TMG/QeI2y7UK95HhXLQpNloiTB1nXCJEHRdYgi
      TFVtpTaMY+I0JbWHOXbgVawDFr75z5hVHma1fmOVIe82OVpemJ2EwL26u+/7aJrWHeySJHWr
      7aRpiqIoxFGIznrBj16EEARB0FV/hBAEnkeuRx26fPY086e/x66H3kUwvA8visphtg0AAB8F
      SURBVBgoFlueo7ksIuyeJEpTFnvMd6rnMWKaxFFIOZcjl8vh+z4NoBnHLDkOTu7jqMqP0fB9
      hLi2a4Qiy0jcnUTBGxkplwn91ia344TWcXrruEJEUUQcx92/dQa6EALdbg1Wz/OwbbsrCGma
      dgd/b1CQ3q6R0Flh9u9R2GvWcO0DRKnUrfCpKApxmmauEO8kJCHQJImyYVDK55mt1286+mvY
      aGDoY/hhxJJ/9yPH9CDAUFVs2yaKInK5HHa7lnGj0UBRFCzLIoqiriB0UsdrnUPCtjVIVdU+
      l4dms0k+n7/qPTuBL52fTdNs3SOKWPM8FEXBDUO8zBnunYWQJEJg2feJ4pjcJhtcQ1UZsiwq
      qsqIbVPsmdB0RcHSBvFdb1sGP0CYy4GmYVkWpVIJwzCo1+s0m82u56fnedTr9e6snc/nCV2H
      qRMvk8u1zgtyuVx3FenNs+S6brcWALQGvOu6hGF4VcWexKljKTKr7U32kG1nKtA7kRTw4hAj
      jSgaBml7yfeiiCHbRkQRgapSyOUomSZDtk3UriCpSDFucGOlUu8U9TRFazbR2pvWjnmzk8Sr
      VCr1BfckccTlc6epX/wepaERKnsO9Q3+MAy7KpPrul2VKYqirlt1Zw8hyzLTF88iRx67jj9J
      s9nkYKWCrutZRNg7mYWmi5Sm7CtJuJHEWhwzapqtMkmqCj3xAYosI6UxSeBCzkIIBVOVu3WP
      t4NIksjJMtVqtR30okCaIuVyLF25gF0oICkasmG3DqtGBnj6kE4yvId6o4FpmjiOg9vO+dPJ
      +2+aJlEUYW/I/latVlu1wogY4T9Sjx9GiCe67ev1OpqmZXuA+4k9xSJGO9ltFEUkSdIqrqco
      KOEyYayhWK3Z1jQMZmo1knahDG6wIPftYKkqI/k8vudRLBaRJIlms0m4Ok9ucJR6GBMJwXA+
      j6nrxHGM53kYRqtOQrPZvOrAC+huiDcKgeM42LaNpgQIcsTJenvf98mZZiYA9xO7CgXyhsHS
      5EWG9x5CAGEYdlWLTkaEOI5RIpdcaQgtWcNJ7NbewnU35OG88yiShKUoqJrWqvjejgbrDRlV
      JIlKe6YeLpUIZ/6c/NBjrEWHsCyrqwJ16K24oygKhmF0VaY4jrEsq8+PSJIkDNNkvl7PVKD7
      BVmSUGUZiYS4OQPiYKuodNv9uKNz5/P5lq5s2wRBgFBLRJGHpqpYuo57l0smJULQiGPojZHe
      oIolQrSEEVAaDQaHPkwgV1AUhWq1immamwbAQGvWbzQaGLpGkgoK+Twr0xMUBkeQpJbFSQhB
      tV1xPhOA+wBNlqloGqosEycwevzDJO1Iqc5M6LpuS+dtz5IdXxoB2LbdOoyK47suADeLSBKc
      eLBdaqql628UmF4kScK2TORkjZg8E2dOsnLlJJoQPP2Tv0ScJMzWat3PmQnAO4RrFbAYzucp
      GiqNpo/rupTL5a7PTMf9uJeOy8FGbF1n0LJohiHBPZJixbYsNATICkmSoCjKpm4UsB4844YR
      00seR/YNUyn6HDr+HEHuU4RRxFS1StRzAJgJwDuEa3n0mJoGaYCqtga267rd+mDX8pO56j2E
      oGwYVEyTOE2Zbscq7DQpEoHnoWlan+vDRuI4JooiQlmmWCwS+T6FsSfRlf8JRd3DxOJS3+CH
      TADuC9YaDYz2yWmu7SohhGBpaWnTmf56CCFQZZmDAwMkaUqUJPhtl4vtZrbRoCzLVEqlawbO
      AJiGQVFfxEl3IclyqyhgkrDmlghlB3+T12cC8A5HleVu4HcngLzjVjA4OHhTIYVwtZuyIsso
      soyhaeiKQiMIWhnYtolUCNaCgHRlBbXtUrEVfhhSCyrYltSKpWjHD+i5HDOrq5tauDJXiHc4
      cZpS3+AmHEURlmVdFfxxLTqlmyLPQUrjTSPSLF1npFC49YS+t4hQVUqVSkutaZtym83mVeGR
      sizTaOdI2lgzTd3iWWQrwH1A1fMoGQZaT1mmq+oSXANJkvCaDS6fO01zcYa1i2/yxCd+mvGH
      n7oqoixpZ6zYbtwootjjCWu3zbi9e5y47SruuC52j5lUkeWWhWwTFShbAe4Tlts+90B3kHie
      RxzHuK6Ls4X+3imRevncadK2dSWJQt765t+QhP2qTidVy07QSYQry3I3UmxjWdgkSSgVi1im
      ydLyMp7vd/++1UyfCcB9gtM2XcqyjEyKbZld+79lWciyvKX5MPDc7uA3jRAQxGFAc2Whr91K
      u+L8TrDZ7K3rOrVajWazieM4JElC1C5MYpkm1UajGyRf2sJylAnAfURnFfAcp+sC0InFtSyr
      61vTcY/oqEi6YbTibaWQxw68RKkcI8kydmW9kHUzCFjbwQS8Q5uVOo0idF0nn8939zy92SU0
      TcO2bfJGirWJi4+eFcm7v3DCkGYQUBxoJc/dWD+gs1F2XbfrTQkgySp7Dh5CXftDDLXOkaMm
      vv0zqIbdVSE22s+3m/yGoHpoqUOWZRH5HrppYVkWruvi+z6yLKO1Vz1VM0mTDYkEJImRfD4T
      gPuNmVoNS9MYK5X6lvdeXbnjWdmJphJCUBkZRxv+NQin2LN3jFjedV27+3ahK0p3tu+lEx5p
      5luJtxzH6UaR6bpO0N43+JFg2V3fAw1ZFuW2SnTTAtCcfpv/+x/O8Nkf2sffvX6Fz37i/cRa
      AUsK+Mu//Tr/4jM/zsyKQ7xwmoEnPs2e4u189IxbwY0iJlZWGNR1zHbQee+GUdf1rj9Q51Q1
      TVNCaQihtdWeDYPf30EfIZnWbN/J7Ax0cwc1Gg1UVcUwDIqFAkFzEbMwQrPpUC6XaQQBy51S
      qW3Mtk/UraVFkSTyusqUKxizJf7ha/9IeXQfShqxe3SQ+bk5XnvxZfYc2sXA9e+WcZcQQhD3
      mEU7X3gQBF3X4M0OlTrtNt5rJ53k/CQhbVt/OnieR6VSAVqqXhAEKNSRq59HLvwqol1CaXET
      61eUJBiahuAWNsGKbvFDTx3Cj3WGh0fYu2cPRw4fplIwCVKJeqPB6Pg4xfIguZ3LyZQBaKra
      tZN3BnWappim2c2msJHNzg7qQdA3g+4ES81my5IVRSB6nNnaVWV0XafalNH3/bc4Xmu/s1mf
      NUXBbqtS7q24Q5vDB3lqeJM/HHvoZm+VcRdRZBmp2eDypdPsffy9xG0TIdBNTR5FEb7v982s
      vXp/J3PCvVCBxg3DVm0Fw+iuYKZpEnguWs7oplOp1WqkaUqhUCC3SaY/rV1YA1pGg5sWAJGm
      vP7Nv+1e7zr8MGMHj93GR8u4W6iiiiqlGO3ZvpNPx/O8rt4chiFBEHQd6IQQ+HHMquvec7EB
      bhShtwdvx+9J0fTuBriTV9TzvFbhjE1WgE4dhY5ad/MCIFJe/6e/6V7LisLIvkN8/i/+jCCB
      z3zmp2g26og4wsiXCb0mbhBjaLBW99g9OogTJBzYt+eWHkLGjZGkKXLlIPsGDnVne1g3HXbS
      hiiK0s3QBq0Cc9P3aMmlKI6R2omvfN/vnngDFIsta0vnb7U47iuj2iFOU+bqdcIkIU7TO2gG
      FQJZUXnu+ed4+umnOXHmPHHsk4YxlpnjmQ99gPOTb3Li5KtoismBfZ+9Y2+dsTmqohC3E0r1
      FoWA9UzLHSEAurP/vUrULnDXCYwJw7CbZKvzLwxDZFmm7nlIWwT6N3sOy+6QAEiUy2USSWNs
      7352j43x9ptvUCgUKdkFFBKef+EFBkb3IscBVqFyZ942Y0tUWUZKEuSeVIO9p7+dNIPNZrP7
      sxDiuhVpdhInDFlYXcXW15NlwfoG33EcTNPEsCykG1TfsqwQ9yk5RWEol+v6AcVhgFdfozg8
      hhCt73tlZYXBwZbdP01TwiRhslrd4Z5fG0WSODAwgCxJRIHP8tQlBkbGSLXWPkfTdSZrtRu2
      Wt20GVQIQVR/q/svCRZv+kNkbAPtXPqyLLO6OM+p117mB3//eV76wh9040IGbI/q7GS3/U5E
      fN0siRA0fB9VVbl05iRzE6d47aufp1AoYFkWq553Uybbm3eGEwmNM/9D91+48i2ESPnmN77G
      c8893/UZqa/OcPbSFYRIeePU2zf9Nhm3R681f+5KqyaWqgqWrpynNjeFJgcw/1u8/o9/RmN5
      nplaDe8es/psRdK2aA2WU54+/CyPPl1ACMFis3nT0Wp3ZA8QBHUSvYSMzwsvPoffdNE0QSrp
      nHz7BKqp8+Qjj92Jt8q4QXorwyiahq1e4di7z/Lyiza6aRELjVzxEE+9NyQ2LFzXv+nwyZ3C
      iyL8KMIYf4xE/DdI0m4uLS/fUqnYOyIAul5gZfYSy0nE8L793YihOIoQiB0/RXwQKVsWIopI
      05SHju7HWPkL5DTioz/7QcTAMEmSMp37l6T7UxreO2fwQ+s84MraWvuqDNy66nbTm2AhBHHj
      RPdazo2h5EZuuQPbzYOwCbY0jeF2TvyO23Or7JDU3QADrLku8/X6TnZ1x7npFUCSJLTiu+5G
      XzLuEJ3YYLXHFSCO4z57uR/HrOxQeOO9xE0LQJqmfPPvvtS9Pvzwoxw4fJQXX3weM19mz64x
      am6dw/sP39GOZtw4YZKQJMlVSbGEECw1mzsa2XWvcUf2AHHscX5ikk9/6nHOnztDLayxsrRK
      TpGJhWB5cQXNyGEVy3zg6afuxFtmXIOcqnZrZnWIk4REiB2L6b1XuSMCICsqn/zxT/L1b3yV
      ol1CLagQuJxfc4iq8+zac4gVJ+TjH80G/3YQJwlsmP39OGah0eDeiPG6d7ilPcChYw93r8uD
      Q8iyxuL8NB/76I+jKRKSIlG0LQ5UHeycwsXL0zz+xO472vGMrYmSpFUlpgdNUVDa+UIz1slc
      Ie5DTEWh3C5M11GD5ur1PiewjBZZWpT7DAkYtO2utyfAquu+Y055t5ssK8R9hqVpGLqOaJs9
      oeVFmWSHkZuSrQD3GZ3CFr0nu3tKJeR30EnvdpIJwH3GSKFA2i4812HZcTJ3lC3IBOA+IxGC
      KIq6h2BRktwTQe33KpkA3GfUXBdFUbpZ0Wbr9R1JZ/5OIROA+4woTZFVlSRJWvGxm6g+uixv
      mmvzQSQTgPuMRAia7brAiSRdleIQIEzT7EygTSYA9yGNblLYiAHbRt0iO0JGJgD3JV4cM99o
      kM/lkIER07wjQiBLEsp9JkzZQdh9SiMIcIKAnKrix/Ed2QinrWiaO3Cne4erfIEyMh4kugKQ
      kfEgsq4CCQGn/pcd7EpGxvazvgKIFL6YJfTPeLC4v7b0GRk3SSYAGQ80mQBkXJcgUPn9Z3fz
      29/Zw0szJiDz779xa/UdvvraOJcad1bV/u75MgArSwX+4I2byzyeCUDGdfmbl8d536OL/Otn
      ZviH18bw2xkIz04XmWoqeK7OyzMmz50d4EuvjfDN8yW++MooL01brFRNvvL2IP/x+yNUQ4lD
      ww6lXMJS1eT//d44p5ZbIbhxpPCFl0f5u9NlRKLw7KUCAM+eLxOGCn/58hjfupRHCHjhUolv
      nxyiGsHMks3vPb+L33thlABYrJr88YtjXKmreL7Gn39/jBcmW8UA01TmW+dKAHzvQpkwkTMB
      yLg+k67C0VKEJAt25VLWktawGTRT/ubEAN87OwBawvculvjYY8v804lhPvmuZb5xcojVqslK
      kvATB33++JUhzkyVWA1lfvf5MT773nn2FloBPF94aRePHF4lH5h8a0bnpQsDxKHGS9MWn//e
      bp48tszc9ACTnsyfPb+XhTjFkGH3sMPxUY9f/dACOUBRYz592OGvT5b54xd28ZHHljh1YYil
      EGQp5a2JCiu+ygtX8jx/YjQTgIzrc8COOVvTEKnEbKBQUVoOdkODTYK6zWtrGk8Nh+hagq2l
      5I0YU0/Q25pOyYwpmjFJ2olKk5CUBFsVFHKt5aQWyozaMWPFkLqv8MRAxH96c4j3HF6l5ql8
      9Y1hmnIEicyBXXX+xROrGO379wa7DeYjDC1FCKg6Gl9+bYRUD4ljGST4Zw/X+O1v7uXRg2vU
      XDUTgIzr88/fM8/LJ0f4nWd386mn5zAUwd5Ky+Huh/e5FIoOqgR7KgESsH+gFYCzt9L6/8Vz
      g/w/Lw/w80+uMFQKMJWETx52+O3ndvG9qZZ68vPvXuTz39vFt2d1fvyhJh85vsrrczof2uPz
      8++bR04UZElCV1L2VfoDfJ7Z1+R3nh8l1RLG8xGKmrCnGPGL758niWUUGXSlZe0/tKfKal3j
      owccPvGuxewcIOPWWa2a/O5LI/zKD08xZm6eb+j85QFOhSGfOXpv5CH92utjrMghv/REKzVO
      JgAZDzSZCpTxQNOzAghY+u4OdycjY3u5696gcRz3pei40+07FdAV5cbVt7vdp3utfdKur3sz
      VWDutc9wt9rftgrk1FaZmV/C931EGuO6N1ekLCNjJ7nNiDBBJGTqq/OEgYPwPcYPHbszPcvI
      2AZufwWor1IeHiMJHNacEF2VSJKELM4m453A7a0AAlzXR4Q1hkd2c3C/TrXmMFjO36HuZWTc
      XW5PACSJI8cf6fvV4P1dXiDjPiM7B8h4oMkEIOOBZlMVSAjBN776JRoBGKVhPvXxj2x3vzIy
      toVNVwBJkvjYxz9OmqTIWV2FjPuYLVUgvzqPbFVoOs529icjY1vZUgV65a1zaCno+YHt7lNG
      xraxpQr0nncdZujQU5hyst19ysjYNrZUgazRo0y8+k8UB0e3sz8ZGdvKlgLgzp8lsHeztjSz
      nf3JyNhWttwD6EOHeWpfFXvkwDZ3KSNj+9hiBRD8f7/3W7zw6tssLa9sb48yMraRLXyBJH7y
      p3+es+cvMT01De9+fHt79YBw9gff5fkv/lH3+od/4dc4/NQHdrBHDx5brgBf++rfU2s4DAzc
      XKq5jIx3EluuAD/1sz9PrjBCLiuilHEfs+Xw/vbf/hnx6HvYM1Lm/U9nKlDG/cmmAiBJEp/8
      2c9xamKefKF8zRvU1lZRciaqLKFKKYlskNMyJ9OMdwZbrgBJUOfK9AKyNMvhA7u3vIGu68zM
      zULiU3dTnnzisVvKQpCRsRNsKQDm4EE+9YndKIp2zRvkDAMALWdTFi5elGLrWYa5jHcGWwpA
      beYMTfsharOneeSRR7ZoJZibmSJNBIO7xrANHdf1QbfuUnfvL/Yf8Bj+uYXutb3Xv0brjLvB
      lgJwZXKSF068wMGjj7Ll+Edi976Dfb+x7ft78H/nz38Xp14FwMwX+dgv//pdf8/Xv/FlZi+c
      7l7/yC/9V6iF0l19z4m3XubcD9YzBb7nkz/H6P7Dd/U9b5TXvv4lXv/Gl7vXn/5X/yNjG9Lx
      LM9c5tV/+GL3+tj7nuHw0x+86l5bCsCRQ/uZCQc4sGvwTvT5nqe2NI/bHtgAw3sPoer6Ve0W
      py7RWFkEwC5vj6t4dWGW+UtnutdJcvc9dJ3aat97Bs7dz+7cXFvm3CvPd6/HDx1j/KGHb+le
      oev09X/30Uc3bbelAMjWIMHaGaalmONHDm7V7L7hxLNf4+z3v9O9/rl/979TGh7buQ49gDTX
      Vnj9n/5m/Ref+MwtC8CNcs1jLlVVWFpauqsdyLhzLFw+T9peHVRdZ3jvoR3u0b3Pdc95C4Us
      ydU7hW/88W/hOw0AKqO7+Zn/7n/d4R7d+2wpAKqmIUkylp0JwP2E26hx5qVvd69H9j3EnmMP
      7kn/lgIQOqvEskGzUd2qyX3FU0/XeWTvukkyX9h8o/ljP7FMGrTayfrmZYHuNO99f40njqz3
      zcjd+vt6jVqfnv3oh39sUwE4fMRhn93zPMbvnazfxx9pcqC83rfCcHRVm3Il5sM/vNq9Htq3
      uYl5y4CYtSDHpz7xYRYWFm+3v3eNpakJosBHCIGqqYweOLrTXcq4DQaHI36651zE2HXrlidN
      TxnuEQzT2nxC22IFELz1xqs88dS7OXHqLHv23FpV8LvNc1/4Q9bmpwHIWTa//Bu/c1WbtYUZ
      Jt56uXu99/gTVMb3blsft5MjRx2ioDVorLK3w715Z7CFM5zMR5/5CKfOTfDMM89sd5/uKNWF
      mb4l38wX7xkBWPGOcWruv+xePzb+EOO3cb8jxxxE3MrjpJjupm0MI+X4I+sz6+jYvaPa7ARb
      7gGMfJmnn35qO/ty0xx6yMMZaH2Zai5zvLsRckbKw4+sJzvLjYY72Jud5x0d7nLwkEfitb5M
      Sd3cBXv3nqBPr7T2bz4zZjyYvKMF4E6y4DzOwsq6ED2Z2JibtHt78bN4bkvoDNNkO9IGX6r+
      CAtzR7rXH3rU5No+urfPgvM4l3rUsyf37WP4Lr9nmOSZbTzdvR4Jx9nMs2zFO8r0yqe7149G
      A1c9Dzca4lxPm32Dh9nMqT8TgDZ+XKIZrmvgqXjnuXRfXPtRorBl7rPyAzyxSZs01WgEPTuN
      pIi9Pd27LmGSZ665LgBmuIuRTdsV+r6rRFzts5Wkub42YbL5edZtlkgSnH77LZxYYmigSE5K
      0Mu7GCxuNnfeeS7XPoLbaLmqqprBezdpEyVG3xeupdZ9K/XNcJQobOn0Iipu2iZICpxb7ZkZ
      y4d5kLO/3naVSN0uYYsUN3BYdhLes+/2B//b3/5TLr7y1e71Rz/3v1EaPXBVOzcaphm2pF/b
      ZBYAaIbjfV/4cX//pqpNxoPJbdcIU9KARiwzWBlk95DM4lqTkcrtuU8ceshll73WvbbzWYLe
      jLvDba4AEgcO9wciFG7vhgBM1d/P5Nx6HML7jw2y+YKekXF7SOIOF/QVQpCm674qaZoiyzee
      JeJm23e6fzMB+He7T/da++wZbc0d3w9KkoSiKH3XN9Pxm21/K1/u3e7TvdY+e0bXaHenV4CM
      jHcSym/8xm/8xk52oFFd5tylKfKq4OylywRhxPSVK9S9iNWFaVYbHgOV9QDwOHB45a1TjA2V
      OH36LA0vpL48x8xiFcImly5PURgYQlNas51IE06/9RpacZipi2eZW6pC5HDp8hSaBmfPXcaw
      Cxg5rd0+5tRbr2GUhpm8eJb55So5KeHi1Bx5PeXM2YvIuTy2sW51mrl0hrVAprk8y5WpWSzL
      4MTpc+waLvHGmydB1cnb67anteUFJqYXUJKAi5cmQMsxO3mZtYbH2uIMi2sNBgcrSN3281ye
      WUSOPS5NTCBpOWYmL1Nt+izOXKYZJJRL67sv36nx1pkLDORznD1/ES8S1JbnmJlfIfJqXJme
      Z3BoCLm9IqRxyGuvv8HQyDDnTp9mpeaQhk0uXpokSUOmpucw8yV0TWm3D3jl9TcZHRnm7KnT
      rNYdBosW33/lLWwdLlycwCgMYGjrmsDEqVfxtUGWpy8yObvEyPAQr/3gBwyOFHn9jXPkTBPL
      XK+yvjQ/zcziGrFb5/LlCQw7x1tvXSBnWUxdPEvVCfvGxeLcFLMrdaJmlcuXr1ALVJYWpjF1
      ibfevkDOtrF6vrPFmSvMrTk7Xye4UB4ip0mINMIPQjy3iR8JlhcXURQZt9mk1wak5mzKBYsk
      CgiilOXFeVLJoKLJLHsxRw/uYm2l1m0vyQrjIwNEcYLrBTSWlljxYg7vH2d1pY6qguN5Pe1V
      xobX29eXljEGR9DklJWlOsceP05jpT9l/Nj4GHEc4XoeaeDSCGWKdo4kEWi6QtPpd7+oDI2i
      Sgmu66LqCovzVQbKBTRdIKlFLBnivvZjKMR4noumyyws1BgoFdA0DUWRcZoOvcu4YZfImzqB
      75EKmeWFRfJ5C9cP8CPYUynQCNZ9gGRVZ2igSJpEuH7E6tISVr6A47oosgxphOf3ts8xVCmS
      phGuH7OytMzElSmKxTxrdY9HHz/Cytxy32fePT6CH6d4rou/ssKV2UlUPU8YxhiGetUzGh7b
      A0mA67rkDIkrF+bJmSpOcxHNGEVOow3tdyPiANfz0HTBykqDNPJpNH1yhopz1f1b7XdcAKrL
      C0xNTTG/VMM0DQQalYJOeaCComgEnk9v+Ifv1JmammK1GVPK65QHhgjcKvN1B4uYMxeuYBfW
      zzbTJOLKlUlm5pcYGixjDVQwiTh3aRIrX0CRBb637hGZxiFXrkwyu7DM0GAJq1KmuTjH1NQU
      kgqnT5xCtXrNvILpyUmmp6epDAyClkMnYGpqiqW1Gpqi4nv9rsnLC7NMTU1h5EukcUIxL3Hi
      7GVUxcBtLLLq+H2bs6X5mXb7MkmUUrQEb5+/gqpKKIqO73l9AtCsrTI1NUUgVHIalAfL1GoO
      UhqTRB4T80uY6vo7xKHH1OQUc0sNhip5igMVGrUqhirjJxJIKZ63LgBx4LbaLzcZqliUKhU0
      RWJ+Zpo0jTl54gxWpTdtS8qVy5PMTE8zODSEViphKSr16iLLVRdN4apnND8zydTUFIXKEGGQ
      Mjg+jK6A50vUq5M4Qe8UIZifnmR6aopiZZA4FOzZXUSIBNcXaAp4nt/Xfq59/2wPkPFAs+Mr
      QEbGTpIJQMYDTSYAGQ80mQBkvGMRQvD8888zcep1Fur//8jb2jnaCR4FQxo8uXmW4cC1dwy6
      EkwM+4+dZbB28WU4d3ALw28BUwYlZQ4GL2sLvPpHa4BRMKSBlKoigzAHD8O//0wMhpYODP/f
      PmRQ0NFj+P75J4M1gcTPwDBaA4yCEQ5Ga4BRMKLBaAYYBSMajGaAUTCiwWgGGAUjGoxmgFEw
      ogEA9W5JGysCx9UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Event occurance over the year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Historical Importance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Medal by country' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Olympic over the year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='select a country' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
